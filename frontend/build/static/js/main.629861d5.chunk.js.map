{"version":3,"sources":["assets/logo.svg","assets/base_url.jsx","actions/pattern_actions.jsx","actions/dataset_actions.jsx","actions/annotation_actions.jsx","actions/theme_actions.jsx","actions/Dataslice.jsx","assets/color_assets.jsx","sharedComponents/TableView/index.jsx","sharedComponents/Menu/index.jsx","sharedComponents/Menu/grouping_setting.jsx","sharedComponents/ProgressButton/index.jsx","features/HeaderComponent/index.jsx","sharedComponents/Sentence/sentenceLight.jsx","sharedComponents/Loading/Loading.jsx","sharedComponents/Summary/SplitThemeModal.jsx","sharedComponents/Summary/index.jsx","features/MarkedScrollbar/index.jsx","sharedComponents/CustomPopover/index.jsx","sharedComponents/TableView/explain_pattern.jsx","sharedComponents/Sentence/Highlight.jsx","sharedComponents/Sentence/sentence.jsx","sharedComponents/LabelSelector/labelselector.jsx","features/Workspace/SentenceViewer.jsx","features/Workspace/index.jsx","routes/index.js","app/App.js","reportWebVitals.js","app/store.jsx","index.js"],"names":["module","exports","__webpack_require__","p","base_url","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","controller","AbortController","explainPattern","createAsyncThunk","_ref2","_asyncToGenerator","_callee","request","_ref","getState","pattern","url","data","_context","URL","concat","fetch","headers","Content-Type","Access-Control-Allow-Origin","credentials","annotuser","window","localStorage","getItem","replaceAll","response","json","_x","_x2","apply","arguments","deletePattern","_ref4","_callee2","_ref3","theme","_context2","body","JSON","stringify","_x3","_x4","pinPattern","_ref6","_callee3","_ref5","_context3","_x5","_x6","fetchRelatedExample","_ref8","_callee4","_ref7","id","_context4","_x7","_x8","fetchPatterns","_ref10","_callee5","_ref9","signal","_context5","_x9","_x10","fetchCombinedPatterns","_ref12","_callee6","_ref11","_context6","_x11","_x12","deleteSoftmatch","_ref14","_callee7","_ref13","pivot_word","similar_word","_context7","_x13","_x14","fetchDataset","fetchUserlabeledData","fetchGroupedDataset","selectedSetting","reorderDataset","dataset","setting","elements","groups","reorderedGroups","_toConsumableArray","elementIds","index","sort","a","b","score","Math","abs","createSession","user","multiLabelData","elementId","label","positive","requestBody","deleteLabelData","labelPhrase","phrase","toggleBinaryMode","binary_mode","binary_mode_value","groupAnnotationsRemote","ids","fetchThemes","fetchSelectedTheme","mergeThemes","splitTheme","group1","group2","splitThemeByPattern","patterns","new_theme_name","renameThemeRemote","new_name","toLowerCase","deleteTheme","addThemeRemote","_ref16","_callee8","_ref15","_context8","_x15","_x16","setTheme","_ref18","_callee9","_ref17","_context9","_x17","_x18","settingsEnum","freeze","0","1","2","3","groupingSettings","patterns_cache","combinedPatterns_cache","explanations_cache","selectedPatterns_cache","modelannotationCount_cache","initialState","workspace","groupNames","backupGroups","userLabel","modelLabel","rules","combinedRules","curCategory","scores","combinedPatterns","explanation","modelAnnotationCount","loading","loadingCombinedPatterns","loadingPatterns","orderSetting","selectedGroupSetting","annotationPerRetrain","userAnnotationCount","userAnnotationTracker","totalDataset","selectedPatterns","themes","relatedExamples","selectedTheme","element_to_label","negative_element_to_label","color_code","not_color","refresh","cacheHit","color_schema","get_user_annotation_count","label_list","find","el","DataSlice","createSlice","reducers","addTheme","action","parse","payload","_objectSpread","newTheme","updateElementLabel","event","filter","word","indexOf","updateNegativeElementLabel","_action$payload","Set","updatePatExp","patternExp","_action$payload2","soft_match","match","updateBinaryMode","updatePatterns","_action$payload3","status","_unused","console","log","patt","changeSetting","changeGroupingSetting","clearAnnotations","map","renameThemeLocal","_action$payload4","all_themes","groupAnnotations","_action$payload5","clearHighlight","_action$payload6","start","end","pattern_exp","exp","getCache","abortApiCall","abort","extraReducers","_extraReducers","_defineProperty","fulfilled","element","user_label","negative_user_label","ready","pending","old_theme","new_themes","pos_update_label","neg_update_label","arrayItem","new_color_code","_objectSpread2","item","remove_color","start_index","search","spaces_within","split","spaces_after","substring","start_highlight","end_highlight","status_code","relatedExplanation","message","_i","_Object$entries","entries","_slicedToArray","_unused2","new_explanation","_DataSlice$actions","actions","TabelView","props","_React$useState","React","_React$useState2","locked","setLocked","useSelector","dispatch","useDispatch","Paper","sx","width","paddingBottom","overflow","marginBottom","LinearProgress","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","columns","column","TableCell","align","style","minWidth","backgroundColor","color","TableBody","row","hover","role","tabIndex","code","hovering","fontWeight","IconButton","onClick","handelOpenModal","handleExplain","InfoIcon","parseFloat","toFixed","Tooltip","title","setHovering","handleVisiblityLock","FilterAltIcon","DeleteIcon","handleDeletePattern","PushPinIcon","handlePinPattern","Settings","options","setAnchorEl","FormControl","InputLabel","Select","labelId","onChange","target","size","MenuItem","GroupingSettings","_React$useState3","_React$useState4","anchorEl","Boolean","handleMenuItemClick","disabled","useStyles","makeStyles","root","marginLeft","spacing","marginRight","flexGrow","alignItems","justifyContent","button","margin","progress","height","colorPrimary","barColorPrimary","bar","withStyles","borderRadius","bgColor","ProgressButton","classes","createElement","className","Button","retrain","variant","Header","useNavigate","useState","addNewTheme","setAddNewTheme","userAnnotationPercent","setUserAnnotationPercent","_React$useState5","_React$useState6","modelAnnotationPercent","setModelAnnotationPercent","_React$useState7","_React$useState8","nextColor","setNextColor","useEffect","AppBar","ml","maxHeight","Box","display","Typography","fontFamily","Stack","direction","divider","Divider","orientation","flexItem","alignContent","mr","position","CircularProgress","thickness","lighten","top","left","bottom","right","component","round","fullWidth","preventDefault","handleThemeChange","displayEmpty","Chip","onKeyDown","e","stopPropagation","onClickCapture","my","TextField","trim","inputRef","input","focus","placeholder","multiline","rowsMax","startIcon","AddIcon","FormControlLabel","control","Switch","SentenceLight","includes","labeled","setLabeled","toHighlight","setToHighlight","handleClick","handleBatchLabel","highlight","to_highlight","highlightAsList","join","show","ListItem","gutterBottom","example","Highlighter","highlightTag","children","highlightIndex","searchWords","textToHighlight","CheckCircleOutlineIcon","HighlightOffIcon","transform","bgcolor","border","boxShadow","CustomLoading","Backdrop","zIndex","modal","open","flexShrink","opacity","SplitThemeModal","setOpen","actionType","sentences","setSentences","setPatterns","setGroupNames","_React$useState9","_React$useState10","_React$useState11","_React$useState12","_React$useState13","_React$useState14","splitStage","setSplitStage","_React$useState15","_React$useState16","loadingLeft","setLoadingLeft","_React$useState17","_React$useState18","loadingRight","setLoadingRight","_React$useState19","_React$useState20","renameTheme","setRenameTheme","_React$useState21","_React$useState22","mergedName","setMergeName","_React$useState23","_React$useState24","defaultMergeName","setDefaultMergeName","_React$useState25","_React$useState26","handleAction","handleClose","updateGrouping","theme1","theme2","new_theme","setName","new_groupNames","stuff","new_sentences","handleSplitTheme","handlePatternRegroup","source","new_patterns","removed","splice","handleRegroup","sentenceId","temp_sentence","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","mt","minHeight","InputProps","startAdornment","ArrowCircleRightIcon","sentence","ArrowCircleLeftIcon","Fab","m","cursor","Menu","MenuListProps","PaperProps","new_group_names","setSecondGroupToMerge","marginTop","Summary","setActionType","Scroller","setIds","new_ids","group","visibility","darken","innerHeight","scrollPosition","CustomPopover","x","y","Popover","anchorPosition","anchorReference","anchorOrigin","vertical","horizontal","padding","handlePhraseLabeling","PatternViewComponent","is_softmatch","softmatch_value","onDelete","handleDelete","ExplainPattern","setRow","minwidth","maxWidth","Highlight","showDelete","setShowDelete","getMatchingPatterns","pats","matchedWith","handlePopoverClose","matched","setPopoverAnchor","setPopoverContent","onMouseEnter","currentTarget","getChild","onMouseLeave","userSelect","deleteMatched","getSelection","empty","CancelIcon","AccordionSentence","matchedParts","setMatchedParts","matchedIndex","setMatchedIndex","setSentence","expandMore","setExpandMore","hidePrediction","setHidePrediction","showAcceptorReject","setShowAcceptorReject","setLoading","getMatchedParts","element_id","setPositiveIds","explanations","sentence_array","_loop","highlighted","substr","current","start_index_counter","end_index_counter","previous_patterns","current_patterns","_loop2","_Object$entries2","_i2","value2","clear_highlight","handleAcceptOrReject","accept","findIt","elevation","setFocusedId","flexWrap","fontSize","borderLeft","onMouseUp","overdflowY","overflowX","rowGap","handelDeleteLabel","negative_label","findIndex","icon","handleAddLabel","borderTop","LabelSelector","groupLabeling","merge","setBatchLabeling","handleAddBinaryLabel","SentenceViewer","setScrollPosition","setOpenSideBar","focusedId","setActiveSentenceGroup","positiveIds","labelSelectorAnchor","setLabelSelectorAnchor","batchLabeling","handleBatchLabeling","handleAddToPos","elem","ps","onScroll","scrollTop","scrollHeight","groupIndex","mb","seeMore","focused","Workspace","setLabelCounter","anchorPoint","setAnchorPoint","setX","setY","showContextMenu","setShowContextMenu","popoverAnchor","popoverContent","_React$useState27","_React$useState28","openModal","setOpenModal","_React$useState29","_React$useState30","patternRow","setPatternRow","clear_session","setItem","handleOpenModal","toString","clientX","clientY","paddingTop","selected","replace","pointerEvents","transformOrigin","disableRestoreFocus","&::before","content","routes","routeProps","path","App","THEME","createTheme","typography","fontWeightLight","fontWeightRegular","fontWeightMedium","palette","mode","darkmode","background","default","components","MuiCard","styleOverrides","_useState","_useState2","MuiThemeProvider","CssBaseline","Routes","modules","Route","assign","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","WorkspaceReducer","ReactDOM","render","BrowserRouter","Provider","store","document","getElementById"],"mappings":"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","file":"static/js/main.629861d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","export const base_url = \"http://0.0.0.0:8080\";\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { CSS_COLOR_NAMES } from \"../assets/color_assets\";\n\nimport { base_url } from \"../assets/base_url\";\nlet controller = new AbortController();\n\n\n\nexport const explainPattern = createAsyncThunk(\n    \"workspace/explainpattern\",\n    async (request, { getState }) => {\n      const state = getState();\n      const { pattern } = request;\n  \n      var url = new URL(`${base_url}/explain/${pattern}`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n  export const deletePattern = createAsyncThunk(\n    \"workspace/deletePattern\",\n    async (request, { getState }) => {\n      const { theme, pattern } = request;\n      var url = new URL(`${base_url}/delete_pattern`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({ theme: theme, pattern: pattern }),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n  export const pinPattern = createAsyncThunk(\n    \"workspace/pinPattern\",\n    async (request, { getState }) => {\n      const { theme, pattern } = request;\n      var url = new URL(`${base_url}/pin_pattern`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({ theme: theme, pattern: pattern }),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n\nexport const fetchRelatedExample = createAsyncThunk(\n    \"workspace/related_examples\",\n    async (request, { getState }) => {\n      const state = getState();\n  \n      const { id } = request;\n  \n      var url = new URL(`${base_url}/related_examples/${id}`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n  export const fetchPatterns = createAsyncThunk(\n    \"workspace/patterns\",\n    async (request, { getState }) => {\n      const signal = controller.signal;\n  \n      var url = new URL(`${base_url}/patterns`);\n  \n      const data = await fetch(url, {\n        signal: signal,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n  export const fetchCombinedPatterns = createAsyncThunk(\n    \"workspace/combinedpatterns\",\n    async (request, { getState }) => {\n      const signal = controller.signal;\n  \n      var url = new URL(`${base_url}/annotations`);\n  \n      const data = await fetch(url, {\n        signal: signal,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n  export const deleteSoftmatch = createAsyncThunk(\n    \"workspace/delete_softmatch_globally\",\n    async (request, { getState }) => {\n      const { pivot_word, similar_word } = request;\n  \n      var url = new URL(\n        `${base_url}/delete_softmatch_globally/${pivot_word}/${similar_word}`\n      );\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  ","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { CSS_COLOR_NAMES } from \"../assets/color_assets\";\n\nimport { base_url } from \"../assets/base_url\";\n\nexport const fetchDataset = createAsyncThunk(\n    \"workspace/dataset\",\n    async (request, { getState }) => {\n      var url = new URL(`${base_url}/dataset`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n  export const fetchUserlabeledData = createAsyncThunk(\n    \"workspace/labeled_data\",\n    async (request, { getState }) => {\n      const { theme } = request;\n      var url = new URL(`${base_url}/labeled_data`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({ theme: theme }),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n  export const fetchGroupedDataset = createAsyncThunk(\n    \"workspace/groupedDataset\",\n    async (request, { getState }) => {\n      const { selectedSetting } = request;\n      if (selectedSetting == 0) {\n        var url = new URL(`${base_url}/original_dataset_order`);\n      } else if (selectedSetting == 1) {\n        var url = new URL(`${base_url}/pattern_clusters`);\n      } else if (selectedSetting == 2) {\n        var url = new URL(`${base_url}/NN_classification`);\n      } else if (selectedSetting == 3) {\n        var url = new URL(`${base_url}/NN_cluster`);\n      }\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n\n  export const reorderDataset = (dataset, setting, elements, groups) => {\n  \n    let reorderedGroups = [...groups];\n    switch (`${setting}`) {\n      case \"0\": //Do not Reorder\n        return reorderedGroups;\n        break;\n      case \"1\":\n        groups.forEach((elementIds, index) => {\n          elementIds.sort(function (a, b) {\n            return -elements[a].score + elements[b].score;\n          });\n  \n          reorderedGroups[index] = elementIds;\n        });\n        return reorderedGroups;\n  \n        break;\n      case \"2\":\n        groups.forEach((elementIds, index) => {\n          elementIds.sort(function (a, b) {\n            return elements[a].score - elements[b].score;\n          });\n  \n          reorderedGroups[index] = elementIds;\n        });\n        return reorderedGroups;\n  \n        break;\n      case \"3\":\n        groups.forEach((elementIds, index) => {\n          elementIds.sort(function (a, b) {\n            return (\n              Math.abs(elements[a].score - 0.5) -\n              Math.abs(elements[b].score - 0.5)\n            );\n          });\n  \n          reorderedGroups[index] = elementIds;\n        });\n        return reorderedGroups;\n        break;\n      case \"4\":\n        // code block\n  \n        return reorderedGroups;\n        break;\n      default:\n        dataset.sort(function (a, b) {\n          return elements[a].score - elements[b].score;\n        });\n      // code block\n    }\n  \n  };\n  \n\n\nexport const createSession = createAsyncThunk(\n  \"workspace/create_session\",\n  async (request, { getState }) => {\n    const state = getState();\n    const { user } = request;\n\n    var url = new URL(`${base_url}/create_session/${user}`);\n\n    const data = await fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        credentials: \"include\",\n        annotuser: user,\n      },\n      method: \"GET\",\n    }).then((response) => response.json());\n\n    return data;\n  }\n);\n\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { CSS_COLOR_NAMES } from \"../assets/color_assets\";\n\nimport { base_url } from \"../assets/base_url\";\n\n\nexport const clearAnnotation = createAsyncThunk(\n    \"workspace/clear\",\n    async (request, { getState }) => {\n      const state = getState();\n  \n      var url = new URL(`${base_url}/clear`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n  \n  export const multiLabelData = createAsyncThunk(\n    \"workspace/multiLabelData\",\n    async (request, { getState }) => {\n      const { elementId, label, positive } = request;\n  \n      if (positive == 0) {\n        var requestBody = { elementId: elementId, theme: label, positive: 0 };\n      } else {\n        var requestBody = { elementId: elementId, theme: label, positive: 1 };\n      }\n  \n      const data = await fetch(`${base_url}/label`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify(requestBody),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n  export const deleteLabelData = createAsyncThunk(\n    \"workspace/deleteLabelData\",\n    async (request, { getState }) => {\n      const { elementId, label } = request;\n      var url = new URL(`${base_url}/delete_label`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({ elementId: elementId, theme: label }),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n  export const labelPhrase = createAsyncThunk(\n    \"workspace/phrase\",\n    async (request, { getState }) => {\n      const { phrase, label, id, positive } = request;\n  \n      var url = new URL(`${base_url}/phrase`);\n  \n      let data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          phrase: phrase,\n          theme: label,\n          elementId: id,\n          positive: positive,\n        }),\n      }).then((response) => response.json());\n  \n      data[\"id\"] = id;\n      data[\"phrase\"] = phrase;\n      data[\"label\"] = label;\n      data[\"positive\"] = positive;\n      return data;\n    }\n  );\n\n\nexport const toggleBinaryMode = createAsyncThunk(\n    \"workspace/toggleBinaryMode\",\n    async (request, { getState }) => {\n      const { binary_mode } = request;\n      const binary_mode_value = binary_mode ? 0 : 1;\n  \n      var url = new URL(`${base_url}/toggle_binary_mode/${binary_mode_value}`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n\nexport const groupAnnotationsRemote = createAsyncThunk(\n    \"workspace/group_annotations\",\n    async (request, { getState }) => {\n      const state = getState();\n  \n      const { ids, label } = request;\n  \n      var url = new URL(`${base_url}/bulk_label`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify(request),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  ","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { CSS_COLOR_NAMES } from \"../assets/color_assets\";\n\nimport { base_url } from \"../assets/base_url\";\n\n\n\nexport const fetchThemes = createAsyncThunk(\n    \"workspace/themes\",\n    async (request, { getState }) => {\n      var url = new URL(`${base_url}/themes`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n  export const fetchSelectedTheme = createAsyncThunk(\n    \"workspace/selected_theme\",\n    async (request, { getState }) => {\n      var url = new URL(`${base_url}/selected_theme`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"GET\",\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n  \n  export const mergeThemes = createAsyncThunk(\n    \"workspace/merge_themes\",\n    async (request, { getState }) => {\n  \n      var url = new URL(`${base_url}/merge_themes`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify(request),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n  export const splitTheme = createAsyncThunk(\n    \"workspace/split_themes\",\n    async (request, { getState }) => {\n      const { theme, group1, group2 } = request;\n  \n      var url = new URL(`${base_url}/split_theme`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({ theme: theme, group1, group2 }),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n  export const splitThemeByPattern = createAsyncThunk(\n    \"workspace/split_theme_by_pattern\",\n    async (request, { getState }) => {\n      const { theme, patterns, new_theme_name } = request;\n  \n      var url = new URL(`${base_url}/split_theme_by_pattern`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({ theme: theme, patterns, new_theme_name }),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n  export const renameThemeRemote = createAsyncThunk(\n    \"workspace/rename_theme\",\n    async (request, { getState }) => {\n      const { theme, new_name } = request;\n  \n      var url = new URL(`${base_url}/rename_theme`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          theme: theme.toLowerCase(),\n          new_name: new_name.toLowerCase(),\n        }),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n\n\nexport const deleteTheme = createAsyncThunk(\n    \"workspace/deleteTheme\",\n    async (request, { getState }) => {\n      const { theme } = request;\n      var url = new URL(`${base_url}/delete_theme`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({ theme: theme }),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n\n  export const addThemeRemote = createAsyncThunk(\n    \"workspace/addTheme\",\n    async (request, { getState }) => {\n      const { theme } = request;\n  \n      var url = new URL(`${base_url}/add_theme`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify(request),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  \n  export const setTheme = createAsyncThunk(\n    \"workspace/setTheme\",\n    async (request, { getState }) => {\n      const { theme } = request;\n  \n      var url = new URL(`${base_url}/set_theme`);\n  \n      const data = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          credentials: \"include\",\n          annotuser: window.localStorage.getItem(\"user\").replaceAll('\"', \"\"),\n        },\n        method: \"POST\",\n        body: JSON.stringify({ theme: theme.toLowerCase() }),\n      }).then((response) => response.json());\n  \n      return data;\n    }\n  );\n  ","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { CSS_COLOR_NAMES } from \"../assets/color_assets\";\nimport {createSession, fetchDataset, fetchGroupedDataset, fetchUserlabeledData, reorderDataset } from \"./dataset_actions\";\n\nimport { multiLabelData, clearAnnotation, deleteLabelData, labelPhrase, toggleBinaryMode, groupAnnotationsRemote } from \"./annotation_actions\";\n\nimport { setTheme, addThemeRemote ,deleteTheme  ,renameThemeRemote, splitThemeByPattern,splitTheme, mergeThemes, fetchSelectedTheme, fetchThemes } from \"./theme_actions\";\n\n\nimport { explainPattern, deletePattern, pinPattern, fetchRelatedExample, fetchPatterns, fetchCombinedPatterns, deleteSoftmatch } from \"./pattern_actions\";\n\nimport { base_url } from \"../assets/base_url\";\n\n\nlet controller = new AbortController();\nconst settingsEnum = Object.freeze({\n  0: \"Default\",\n  1: \"Positives\",\n  2: \"Negatives\",\n  3: \"Unsure\",\n});\n\nconst groupingSettings = Object.freeze({\n  0: \"None\",\n  1: \"Patterns\",\n  2: \"Model predictions\",\n  3: \"Similarity\",\n});\n\nlet patterns_cache = {};\nlet combinedPatterns_cache = {};\n\nlet explanations_cache = {};\nlet selectedPatterns_cache = {};\nlet modelannotationCount_cache = {};\n\nconst initialState = {\n  workspace: \"fairytale-bias-val-split\",\n  dataset: [],\n  groups: [],\n  groupNames: [],\n  backupGroups: [],\n\n  elements: {},\n  userLabel: {},\n  modelLabel: {},\n  rules: null,\n  combinedRules: null,\n  curCategory: null,\n  scores: null,\n\n  patterns: [],\n  combinedPatterns: {},\n  explanation: {},\n  modelAnnotationCount: 0,\n\n  loading: true,\n  loadingCombinedPatterns: false,\n  loadingPatterns: false,\n  orderSetting: settingsEnum,\n  groupingSettings: groupingSettings,\n  selectedSetting: 0,\n  selectedGroupSetting: 0,\n  annotationPerRetrain: 10,\n  userAnnotationCount: 0,\n  userAnnotationTracker: 0,\n  totalDataset: 0,\n  selectedPatterns: {},\n  themes: [],\n  relatedExamples: [],\n  selectedTheme: null,\n  element_to_label: {},\n  negative_element_to_label: {},\n  color_code: {},\n  not_color: \"#fc0b22\",\n  binary_mode: false,\n  refresh: false,\n\n  cacheHit: null,\n  color_schema: CSS_COLOR_NAMES,\n};\n\n\nconst get_user_annotation_count = (\n  element_to_label,\n  negative_element_to_label,\n  theme\n) => {\n  let userAnnotationCount = 0;\n  element_to_label &&\n    Object.keys(element_to_label).forEach((id) => {\n      const label_list = element_to_label[id];\n      const found = label_list && label_list.find((el) => el == theme);\n      if (found) {\n        userAnnotationCount += 1;\n      }\n    });\n\n  negative_element_to_label &&\n    Object.keys(negative_element_to_label).forEach((id) => {\n      const label_list = negative_element_to_label[id];\n      const found = label_list && label_list.find((el) => el == theme);\n      if (found) {\n        userAnnotationCount += 1;\n      }\n    });\n\n  return userAnnotationCount;\n};\n\n\nconst DataSlice = createSlice({\n  name: \"workspace\",\n  initialState,\n  reducers: {\n    addTheme(state, action) {\n      let themes = JSON.parse(JSON.stringify(state.themes));\n      if (themes && themes.find((el) => el == action.payload.theme)) {\n        return {\n          ...state,\n        };\n      }\n\n      let color_code = JSON.parse(JSON.stringify(state.color_code));\n\n      const newTheme = action.payload.theme;\n      const index = action.payload.index;\n\n      //TODO input validation\n\n      let color_schema = JSON.parse(JSON.stringify(state.color_schema));\n      themes = [...themes, newTheme];\n      color_code[`${newTheme}`] = color_schema[index];\n\n      return {\n        ...state,\n        themes,\n        color_code,\n      };\n    },\n\n    updateElementLabel(state, action) {\n      let refresh = false;\n\n      let selectedTheme = JSON.parse(JSON.stringify(state.selectedTheme));\n\n      let userAnnotationTracker = JSON.parse(\n        JSON.stringify(state.userAnnotationTracker)\n      );\n      let negative_element_to_label = JSON.parse(\n        JSON.stringify(state.negative_element_to_label)\n      );\n\n      if (action.payload.event == \"REMOVE\") {\n        let element_to_label = JSON.parse(\n          JSON.stringify(state.element_to_label)\n        );\n\n        if (element_to_label[action.payload.elementId]) {\n          let userAnnotationCount = JSON.parse(\n            JSON.stringify(state.userAnnotationCount)\n          );\n          element_to_label[action.payload.elementId] = element_to_label[\n            action.payload.elementId\n          ].filter((word) => word != action.payload.label);\n          refresh = true;\n          return {\n            ...state,\n            element_to_label,\n            userAnnotationCount: userAnnotationCount - 1,\n            refresh,\n          };\n        }\n      } else if (action.payload.event == \"ADD\") {\n        //check if label is already in negative batch\n        const found =\n          negative_element_to_label[action.payload.elementId] &&\n          negative_element_to_label[action.payload.elementId].find(\n            (el) => el == action.payload.label\n          );\n        if (found) {\n          negative_element_to_label[action.payload.elementId] =\n            negative_element_to_label[action.payload.elementId].filter(\n              (el) => el != action.payload.label\n            );\n        }\n\n        let element_to_label = JSON.parse(\n          JSON.stringify(state.element_to_label)\n        );\n\n        if (\n          !element_to_label[action.payload.elementId] ||\n          element_to_label[action.payload.elementId].indexOf(\n            action.payload.label\n          ) == -1\n        ) {\n          userAnnotationTracker += 1;\n          refresh = true;\n        }\n\n        if (element_to_label[action.payload.elementId]) {\n          element_to_label[action.payload.elementId] = [\n            ...element_to_label[action.payload.elementId],\n            action.payload.label,\n          ];\n        } else {\n          element_to_label[action.payload.elementId] = [action.payload.label];\n        }\n\n        let userAnnotationCount = get_user_annotation_count(\n          element_to_label,\n          negative_element_to_label,\n          selectedTheme\n        );\n\n        return {\n          ...state,\n          element_to_label,\n          negative_element_to_label,\n          userAnnotationCount: userAnnotationCount,\n          userAnnotationTracker,\n          refresh: refresh,\n        };\n      }\n    },\n    updateNegativeElementLabel(state, action) {\n      let refresh = false;\n\n      const { elementId, theme, label } = action.payload;\n      let element_to_label = JSON.parse(JSON.stringify(state.element_to_label));\n      let negative_element_to_label = JSON.parse(\n        JSON.stringify(state.negative_element_to_label)\n      );\n\n      let selectedTheme = JSON.parse(JSON.stringify(state.selectedTheme));\n\n      let userAnnotationTracker = JSON.parse(\n        JSON.stringify(state.userAnnotationTracker)\n      );\n\n      userAnnotationTracker += 1;\n      refresh = true;\n\n      //check if already labeled in the opposite collection\n      //add to list of given label\n      if (label == 1) {\n        //check in negative element to label collection\n        negative_element_to_label[elementId] =\n          negative_element_to_label[elementId] &&\n          negative_element_to_label[elementId].filter(\n            (label) => label != theme\n          );\n        if (element_to_label[action.payload.elementId]) {\n          element_to_label[action.payload.elementId] = [\n            ...element_to_label[action.payload.elementId],\n            action.payload.theme,\n          ];\n        } else {\n          element_to_label[action.payload.elementId] = [action.payload.theme];\n        }\n      } else if (label == 0) {\n        //check in positive element to label collection\n        element_to_label[elementId] =\n          element_to_label[elementId] &&\n          element_to_label[elementId].filter((label) => label != theme);\n\n        if (negative_element_to_label[action.payload.elementId]) {\n          negative_element_to_label[action.payload.elementId] = [\n            ...new Set([\n              ...negative_element_to_label[action.payload.elementId],\n              action.payload.theme,\n            ]),\n          ];\n        } else {\n          negative_element_to_label[action.payload.elementId] = [\n            action.payload.theme,\n          ];\n        }\n      }\n      let userAnnotationCount = get_user_annotation_count(\n        element_to_label,\n        negative_element_to_label,\n        selectedTheme\n      );\n\n      return {\n        ...state,\n        negative_element_to_label,\n        element_to_label,\n        userAnnotationCount,\n        userAnnotationTracker,\n        refresh: refresh,\n      };\n    },\n    updatePatExp(state, action) {\n      let patternExp = JSON.parse(JSON.stringify(state.patternExp));\n      let { pattern, soft_match } = action.payload;\n\n      patternExp[pattern][1] = patternExp[pattern][1].filter(\n        (match) => match != soft_match\n      );\n\n      return {\n        ...state,\n        patternExp,\n      };\n    },\n    updateBinaryMode(state, action) {\n      let binary_mode = JSON.parse(JSON.stringify(state.binary_mode));\n\n      return {\n        ...state,\n        binary_mode: !binary_mode,\n      };\n    },\n    updatePatterns(state, action) {\n      const { pattern, status } = action.payload;\n      let patterns = JSON.parse(JSON.stringify(state.patterns));\n\n      let combinedPatterns = JSON.parse(JSON.stringify(state.combinedPatterns));\n      try {\n        patterns[pattern][\"status\"] = status;\n      } catch {\n        console.log(\"This shouldnt happen \", patterns);\n      }\n      if (status == 0) {\n\n        combinedPatterns[\"patterns\"] = combinedPatterns[\"patterns\"].filter(\n          function (el) {\n            return el[\"pattern\"] != pattern;\n          }\n        );\n      } else {\n\n        let patt = patterns[pattern];\n        patt[\"weight\"] = \"-\";\n        combinedPatterns[\"patterns\"].push(patt);\n      }\n\n      return {\n        ...state,\n        patterns: patterns,\n        combinedPatterns: combinedPatterns,\n      };\n    },\n    changeSetting(state, action) {\n      let dataset = JSON.parse(JSON.stringify(state.dataset));\n      let elements = JSON.parse(JSON.stringify(state.elements));\n\n      const backupGroups = JSON.parse(JSON.stringify(state.backupGroups));\n\n      let groups = JSON.parse(JSON.stringify(state.groups));\n      let reorderedGroups = JSON.parse(JSON.stringify(state.groups));\n      let selectedTheme = JSON.parse(JSON.stringify(state.selectedTheme));\n      const selectedGroupSetting = JSON.parse(\n        JSON.stringify(state.selectedGroupSetting)\n      );\n\n      const combinedPatterns = JSON.parse(\n        JSON.stringify(state.combinedPatterns)\n      );\n      if (Object.keys(combinedPatterns).length > 0) {\n        reorderedGroups = reorderDataset(\n          dataset,\n          action.payload.selectedSetting,\n          elements,\n          groups\n        );\n      }\n      return {\n        ...state,\n        selectedSetting: action.payload.selectedSetting,\n        dataset: dataset,\n        groups:\n          action.payload.selectedSetting != 0 ? reorderedGroups : backupGroups,\n      };\n    },\n\n    changeGroupingSetting(state, action) {\n      return {\n        ...state,\n        selectedGroupSetting: action.payload.selectedSetting,\n        selectedSetting: 0,\n      };\n    },\n\n    clearAnnotations(state, action) {\n      let elements = JSON.parse(JSON.stringify(state.elements));\n      Object.keys(elements).map((elementId) => {\n        elements[elementId][\"score\"] = null;\n      });\n\n      return {\n        ...state,\n        elements: elements,\n      };\n    },\n    renameThemeLocal(state, action) {\n      const { theme, new_name } = action.payload;\n      let element_to_label = JSON.parse(JSON.stringify(state.element_to_label));\n\n      let negative_element_to_label = JSON.parse(\n        JSON.stringify(state.negative_element_to_label)\n      );\n\n      let all_themes = JSON.parse(JSON.stringify(state.themes));\n\n      let color_code = JSON.parse(JSON.stringify(state.color_code));\n      color_code[new_name] = color_code[theme];\n      let selectedTheme = JSON.parse(JSON.stringify(state.selectedTheme));\n      Object.keys(element_to_label).map((elementId) => {\n        let index = element_to_label[elementId].indexOf(theme);\n        if (index != -1) {\n          element_to_label[elementId][index] = new_name;\n        }\n      });\n\n      Object.keys(negative_element_to_label).map((elementId) => {\n        let index = negative_element_to_label[elementId].indexOf(theme);\n        if (index != -1) {\n          negative_element_to_label[elementId][index] = new_name;\n        }\n      });\n\n      let index = all_themes.indexOf(theme);\n      all_themes[index] = new_name;\n      if (selectedTheme == theme) {\n        selectedTheme = new_name;\n      }\n\n      return {\n        ...state,\n        element_to_label: element_to_label,\n        themes: all_themes,\n        selectedTheme: selectedTheme,\n        color_code: color_code,\n        negative_element_to_label: negative_element_to_label,\n      };\n    },\n\n    groupAnnotations(state, action) {\n      const { ids, label, positive } = action.payload;\n\n      let userAnnotationCount = JSON.parse(\n        JSON.stringify(state.userAnnotationCount)\n      );\n      let userAnnotationTracker = JSON.parse(\n        JSON.stringify(state.userAnnotationTracker)\n      );\n\n      let element_to_label = JSON.parse(JSON.stringify(state.element_to_label));\n\n      let negative_element_to_label = JSON.parse(\n        JSON.stringify(state.negative_element_to_label)\n      );\n\n      if (positive == 1) {\n        ids.forEach((elementId) => {\n          userAnnotationCount += 1;\n          userAnnotationTracker += 1;\n          if (element_to_label[elementId]) {\n            element_to_label[elementId] = [\n              ...element_to_label[elementId],\n              label,\n            ];\n          } else {\n            element_to_label[elementId] = [label];\n          }\n        });\n      } else {\n        ids.forEach((elementId) => {\n          userAnnotationCount += 1;\n          if (negative_element_to_label[elementId]) {\n            negative_element_to_label[elementId] = [\n              ...negative_element_to_label[elementId],\n              label,\n            ];\n          } else {\n            negative_element_to_label[elementId] = [label];\n          }\n        });\n      }\n\n      return {\n        ...state,\n        element_to_label: element_to_label,\n        negative_element_to_label: negative_element_to_label,\n        userAnnotationCount: userAnnotationCount,\n        userAnnotationTracker: userAnnotationTracker,\n      };\n    },\n    clearHighlight(state, action) {\n      const { key, label, start, end, patterns, elementId } = action.payload;\n      let explanation = JSON.parse(JSON.stringify(state.explanation));\n      patterns &&\n        patterns.forEach((pattern) => {\n          let pattern_exp = explanation[pattern][elementId] || [];\n\n          if (pattern_exp != \"\" || true) {\n            pattern_exp.forEach((exp) => {\n              pattern_exp = pattern_exp.filter(\n                (explanation) =>\n                  explanation[1] != start && explanation[2] != end\n              );\n\n              explanation[pattern][elementId] = pattern_exp;\n            });\n          }\n        });\n\n      return {\n        ...state,\n        explanation: explanation,\n      };\n    },\n\n    getCache(state, action) {\n      const selectedTheme = JSON.parse(JSON.stringify(state.selectedTheme));\n      if (\n        patterns_cache[selectedTheme] == null ||\n        patterns_cache[selectedTheme] == undefined\n      ) {\n\n        return {\n          ...state,\n          cacheHit: false,\n        };\n      }\n     \n\n      return {\n        ...state,\n        patterns: patterns_cache[selectedTheme] || [],\n        combinedPatterns: combinedPatterns_cache[selectedTheme] || {},\n        explanation: explanations_cache[selectedTheme] || {},\n        selectedPatterns: selectedPatterns_cache[selectedTheme] || {},\n        modelAnnotationCount: modelannotationCount_cache[selectedTheme] || 0,\n        loadingCombinedPatterns: false,\n        loadingPatterns: false,\n        refresh: false,\n        cacheHit: true,\n      };\n    },\n    abortApiCall(state, action) {\n      if (controller) {\n        console.log(\n          \"LOGG Aborting becase theme is \",\n          JSON.parse(JSON.stringify(state.selectedTheme))\n        );\n        controller.abort();\n      }\n      return {\n        ...state,\n        loadingCombinedPatterns: false,\n        loadingPatterns: false,\n      };\n    },\n  },\n  extraReducers: {\n    [fetchDataset.fulfilled]: (state, action) => {\n      let selectedGroupSetting = JSON.parse(\n        JSON.stringify(state.selectedGroupSetting)\n      );\n      let selectedTheme = JSON.parse(JSON.stringify(state.selectedTheme));\n      let element_to_label = {};\n      let negative_element_to_label = {};\n      let userAnnotationCount = 0;\n\n      const data = action.payload;\n      let dataset = [];\n      let groups = [];\n      let elements = {};\n\n      data.forEach((element) => {\n        dataset.push(element.id);\n        elements[element.id] = element;\n        if (element.user_label) {\n          element_to_label[element.id] = element.user_label;\n          const found =\n            element.user_label &&\n            selectedTheme &&\n            element.user_label.find((el) => el == selectedTheme);\n          if (found) {\n            userAnnotationCount += 1;\n          }\n        }\n        if (element.negative_user_label) {\n          negative_element_to_label[element.id] = element.negative_user_label;\n          // userAnnotationCount += 1;\n        }\n      });\n      if (selectedGroupSetting == 0) {\n        groups = [dataset];\n      }\n      return {\n        ...state,\n        dataset: dataset,\n        elements: elements,\n        ready: true,\n        totalDataset: data.length,\n        loading: false,\n        groups: groups,\n        element_to_label: element_to_label,\n        negative_element_to_label: negative_element_to_label,\n        userAnnotationCount: userAnnotationCount,\n      };\n    },\n    [splitTheme.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [splitTheme.fulfilled]: (state, action) => {\n      const data = action.payload;\n\n      let themes = data[\"all_themes\"];\n\n      let color_code = JSON.parse(JSON.stringify(state.color_code));\n      let color_schema = JSON.parse(JSON.stringify(state.color_schema));\n\n      let element_to_label = JSON.parse(JSON.stringify(state.element_to_label));\n      let negative_element_to_label = JSON.parse(\n        JSON.stringify(state.negative_element_to_label)\n      );\n\n      const old_theme = data[\"old_theme\"];\n      const new_themes = data[\"new_themes\"];\n      const pos_update_label = data[\"pos_update_labels\"];\n      const neg_update_label = data[\"neg_update_labels\"];\n\n      new_themes.forEach((theme) => {\n        const pos_of_theme = pos_update_label[theme];\n\n        pos_of_theme.forEach((elementId) => {\n          //update postive element_to_level\n          if (element_to_label[elementId]) {\n            element_to_label[elementId] = element_to_label[elementId].filter(\n              (arrayItem) => arrayItem != old_theme\n            );\n            element_to_label[elementId].push(theme);\n          } else {\n            element_to_label[elementId] = [theme];\n          }\n        });\n\n        //update negative negative_element_to_level\n        const neg_of_theme = neg_update_label[theme];\n\n        neg_of_theme.forEach((elementId) => {\n          //update postive element_to_level\n          if (negative_element_to_label[elementId]) {\n            negative_element_to_label[elementId] = negative_element_to_label[\n              elementId\n            ].filter((arrayItem) => arrayItem != old_theme);\n            negative_element_to_label[elementId].push(theme);\n          } else {\n            negative_element_to_label[elementId] = [theme];\n          }\n        });\n      });\n\n      let index = Object.keys(color_code).length;\n\n      let new_color_code = { ...color_code };\n\n      themes.forEach((theme) => {\n        if (color_code[theme]) {\n          new_color_code[theme] = color_code[theme];\n        } else {\n          new_color_code[theme] = color_schema[index];\n          index += 1;\n        }\n      });\n\n\n      const userAnnotationCount = get_user_annotation_count(\n        element_to_label,\n        negative_element_to_label,\n        data[\"selected_theme\"]\n      );\n      return {\n        ...state,\n        loading: false,\n        selectedTheme: data[\"selected_theme\"],\n        themes: data[\"all_themes\"],\n        color_code: new_color_code,\n        explanation: {},\n        element_to_label: element_to_label,\n        negative_element_to_label: negative_element_to_label,\n        userAnnotationCount: userAnnotationCount,\n      };\n    },\n    [splitThemeByPattern.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [splitThemeByPattern.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        loading: false,\n      };\n    },\n    [toggleBinaryMode.fulfilled]: (state, action) => {},\n\n    [mergeThemes.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [mergeThemes.fulfilled]: (state, action) => {\n      let data = action.payload;\n\n      let color_code = JSON.parse(JSON.stringify(state.color_code));\n      let color_schema = JSON.parse(JSON.stringify(state.color_schema));\n\n      let element_to_label = JSON.parse(JSON.stringify(state.element_to_label));\n\n      data[\"pos_update\"].forEach((elementId) => {\n        if (element_to_label[elementId])\n          element_to_label[elementId].push(data[\"new_theme\"]);\n      });\n\n      let index = Object.keys(color_code).length;\n\n      let new_color_code = { ...color_code };\n\n      data[\"all_themes\"] &&\n        data[\"all_themes\"].forEach((theme) => {\n          if (color_code[theme]) {\n            new_color_code[theme] = color_code[theme];\n          } else {\n            new_color_code[theme] = color_schema[index];\n            index += 1;\n          }\n        });\n\n\n      return {\n        ...state,\n        themes: data[\"all_themes\"],\n        color_code: new_color_code,\n        loading: false,\n        element_to_label: element_to_label,\n      };\n    },\n    [explainPattern.pending]: (state, action) => {\n      const data = action.payload;\n      return {\n        ...state,\n        patternExp: null,\n      };\n    },\n\n    [explainPattern.fulfilled]: (state, action) => {\n      const data = action.payload;\n\n\n      Object.keys(data).map((value, index) => console.log(data[value][1]));\n\n      return {\n        ...state,\n        patternExp: data,\n      };\n    },\n\n    [fetchThemes.fulfilled]: (state, action) => {\n      const data = action.payload;\n      let color_schema = JSON.parse(JSON.stringify(state.color_schema));\n\n      let color_code = {};\n      data.forEach((element, index) => {\n        color_code[`${element}`] = color_schema[index];\n      });\n\n      return {\n        ...state,\n        themes: data,\n        color_code,\n      };\n    },\n\n    [deleteTheme.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n\n    [deleteTheme.fulfilled]: (state, action) => {\n      const data = action.payload;\n\n      let element_to_label = JSON.parse(JSON.stringify(state.element_to_label));\n\n      let color_code = JSON.parse(JSON.stringify(state.color_code));\n      let color_schema = JSON.parse(JSON.stringify(state.color_schema));\n\n      let negative_element_to_label = JSON.parse(\n        JSON.stringify(state.negative_element_to_label)\n      );\n\n      data[\"pos_update\"] &&\n        data[\"pos_update\"].forEach((elementId) => {\n          element_to_label[elementId] = element_to_label[elementId].filter(\n            function (item) {\n              return item !== data[\"deleted_theme\"];\n            }\n          );\n        });\n      data[\"neg_update\"] &&\n        data[\"neg_update\"].forEach((elementId) => {\n          negative_element_to_label[elementId] = negative_element_to_label[\n            elementId\n          ].filter(function (item) {\n            return item !== data[\"deleted_theme\"];\n          });\n        });\n\n      const remove_color = color_code[data[\"deleted_theme\"]];\n\n      color_schema = color_schema.filter((item) => item != remove_color);\n\n      color_schema.push(remove_color);\n\n      const userAnnotationCount = get_user_annotation_count(\n        element_to_label,\n        negative_element_to_label,\n        data[\"selected_theme\"]\n      );\n      return {\n        ...state,\n        loading: false,\n        selectedTheme: data[\"selected_theme\"],\n        themes: data[\"all_themes\"],\n        loading: false,\n        element_to_label: element_to_label,\n        negative_element_to_label: negative_element_to_label,\n        userAnnotationCount: userAnnotationCount,\n        explanation: {},\n\n        color_schema: color_schema,\n      };\n    },\n\n    [fetchSelectedTheme.fulfilled]: (state, action) => {\n      const data = action.payload;\n      let userAnnotationCount = 0;\n      //updateAnnotationCounter\n      if (data) {\n        const element_to_label = JSON.parse(\n          JSON.stringify(state.element_to_label)\n        );\n        const negative_element_to_label = JSON.parse(\n          JSON.stringify(state.negative_element_to_label)\n        );\n\n        userAnnotationCount = get_user_annotation_count(\n          element_to_label,\n          negative_element_to_label,\n          data\n        );\n      }\n\n      return {\n        ...state,\n        selectedTheme: data,\n        userAnnotationCount: userAnnotationCount,\n      };\n    },\n\n    [setTheme.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n\n    [setTheme.fulfilled]: (state, action) => {\n      const data = action.payload;\n      let element_to_label = JSON.parse(JSON.stringify(state.element_to_label));\n      let negative_element_to_label = JSON.parse(\n        JSON.stringify(state.negative_element_to_label)\n      );\n\n\n      //update Annotation counter\n      let userAnnotationCount = get_user_annotation_count(\n        element_to_label,\n        negative_element_to_label,\n        data[0]\n      );\n\n      return {\n        ...state,\n        dataset: data[1],\n        selectedTheme: data[0],\n        explanation: {},\n        combinedPatterns: {},\n        patterns: [],\n        userAnnotationCount: userAnnotationCount,\n        modelAnnotationCount: 0,\n        loading: false,\n        cacheHit: true,\n      };\n    },\n\n    [labelPhrase.pending]: (state, action) => {},\n\n    [labelPhrase.fulfilled]: (state, action) => {\n      const data = action.payload;\n      if (data && data[\"positive\"] == 0) {\n        return {\n          ...state,\n        };\n      }\n      let id = data[\"id\"];\n      let phrase = data[\"phrase\"];\n\n      let label = data[\"label\"];\n\n      let elements = JSON.parse(JSON.stringify(state.elements));\n\n      const start_index = elements[id][\"example\"].search(phrase);\n\n\n      if (start_index == -1) {\n        return {\n          ...state,\n        };\n      }\n\n      const spaces_within = phrase.split(\" \").length - 1;\n      const spaces_before =\n        elements[id][\"example\"].substring(0, start_index).split(\" \").length - 1;\n\n      const spaces_after = elements[id][\"example\"]\n        .substring(start_index + 1, elements[id][\"example\"].length)\n        .split(\" \").length;\n\n      const total_spaces = elements[id][\"example\"].split(\" \").length - 1;\n\n      const start_highlight = total_spaces - spaces_after + 1;\n      const end_highlight = start_highlight + spaces_within + 1;\n\n      let explanation = JSON.parse(JSON.stringify(state.explanation));\n      // console.log(explanation[\"USER_DEFINED\"]);\n      if (!explanation[\"USER_DEFINED\"]) explanation[\"USER_DEFINED\"] = {};\n\n      if (!explanation[\"USER_DEFINED\"][id])\n        explanation[\"USER_DEFINED\"][id] = [];\n\n      explanation[\"USER_DEFINED\"][id].push([\n        elements[id][\"example\"]\n          .split(\" \")\n          .slice(start_highlight, end_highlight),\n        start_highlight,\n        end_highlight,\n        label,\n      ]);\n\n\n      return {\n        ...state,\n        explanation,\n      };\n    },\n\n    [fetchPatterns.pending]: (state, action) => {\n      let userAnnotationTracker = 0;\n\n      return {\n        ...state,\n        loadingPatterns: true,\n        userAnnotationTracker,\n        refresh: false,\n      };\n    },\n\n    [fetchPatterns.fulfilled]: (state, action) => {\n      const data = action.payload;\n      if (data.status_code == 300 || data.status_code == 500) {\n        return {\n          ...state,\n          loadingPatterns: false,\n          modelAnnotationCount: 0,\n\n          combinedPatterns: {},\n          patterns: [],\n        };\n      }\n      //make rankby default and make group by none\n      const selectedTheme = JSON.parse(JSON.stringify(state.selectedTheme));\n      const groups = JSON.parse(JSON.stringify(state.groups));\n      patterns_cache[selectedTheme] = data;\n      return {\n        ...state,\n        patterns: data,\n        loadingPatterns: false,\n        cacheHit: true,\n        backupGroups: groups,\n      };\n    },\n\n    [fetchRelatedExample.fulfilled]: (state, action) => {\n      const data = action.payload;\n\n      return {\n        ...state,\n        relatedExamples: data[0],\n        relatedExplanation: data[1],\n      };\n    },\n\n    [fetchCombinedPatterns.pending]: (state, action) => {\n      return {\n        ...state,\n        loadingCombinedPatterns: true,\n      };\n    },\n    [fetchGroupedDataset.pending]: (state, action) => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n\n    [fetchGroupedDataset.fulfilled]: (state, action) => {\n      let data = action.payload;\n      if (!data[\"data\"]) {\n        data[\"data\"] = [JSON.parse(JSON.stringify(state.dataset))];\n      }\n      if (data[\"status_code\"] == 300) {\n        data[\"data\"] = [JSON.parse(JSON.stringify(state.dataset))];\n      }\n\n      return {\n        ...state,\n        loading: false,\n        groups: data[\"data\"],\n        backupGroups: data[\"data\"],\n        groupNames: data[\"group_names\"],\n      };\n    },\n\n    [fetchCombinedPatterns.fulfilled]: (state, action) => {\n      const data = action.payload;\n\n      if (data.message) {\n        return {\n          ...state,\n          modelAnnotationCount: 0,\n          loadingCombinedPatterns: false,\n          loading: false,\n        };\n      }\n\n      let modelAnnotationCount = 0;\n\n      let selectedSetting = JSON.parse(JSON.stringify(state.selectedSetting));\n\n      let patterns = JSON.parse(JSON.stringify(state.patterns));\n\n      let dataset = JSON.parse(JSON.stringify(state.dataset));\n\n      let elements = JSON.parse(JSON.stringify(state.elements));\n\n      let reorderedGroups = JSON.parse(JSON.stringify(state.groups));\n\n      for (const [key, value] of Object.entries(data[\"scores\"])) {\n        elements[key][\"score\"] = value;\n\n        if (value != 0.5) modelAnnotationCount += 1;\n      }\n\n\n      reorderedGroups = reorderDataset(\n        dataset,\n        selectedSetting,\n        elements,\n        reorderedGroups\n      );\n\n      let selectedPatterns = {};\n      data.patterns.forEach((element) => {\n        selectedPatterns[element[\"pattern\"]] = element[\"weight\"];\n        try {\n          patterns[element[\"pattern\"]][\"status\"] = 1;\n        } catch {\n          console.log(\"Caught Error: pattern doesn't exist\");\n        }\n      });\n\n      const selectedTheme = JSON.parse(JSON.stringify(state.selectedTheme));\n      combinedPatterns_cache[selectedTheme] = data;\n      explanations_cache[selectedTheme] = data.explanation;\n      selectedPatterns_cache[selectedTheme] = selectedPatterns;\n      patterns_cache[selectedTheme] = patterns;\n      modelannotationCount_cache[selectedTheme] = modelAnnotationCount;\n\n      const explanation = JSON.parse(JSON.stringify(state.explanation));\n      let new_explanation = data.explanation || {};\n      new_explanation[\"USER_DEFINED\"] = explanation[\"USER_DEFINED\"];\n\n      return {\n        ...state,\n        combinedPatterns: data,\n        loadingCombinedPatterns: false,\n        explanation: new_explanation,\n        dataset: dataset,\n        patterns: patterns,\n        elements: elements,\n        modelAnnotationCount: modelAnnotationCount,\n        selectedPatterns: selectedPatterns,\n        groups: reorderedGroups,\n      };\n    },\n  },\n});\n\nexport default DataSlice.reducer;\nexport const {\n  updateElementLabel,\n  updateNegativeElementLabel,\n  addTheme,\n  updatePatExp,\n  updateBinaryMode,\n  changeSetting,\n  changeGroupingSetting,\n  updatePatterns,\n  clearAnnotations,\n  groupAnnotations,\n  renameThemeLocal,\n  clearHighlight,\n  getCache,\n  abortApiCall,\n} = DataSlice.actions;\n","export const CSS_COLOR_NAMES = [\n  \"#B23CFD\",\n  \"#00B74A\",\n  \"#39C0ED\",\n  \"#FFA900\",\n  \"#262626\",\n  \"#1266F1\",\n  \"#008080\",\n  \"#964B00\",\n  \"#deb887\",\n  \"#FF7F50\",\n];\n","import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\n\nimport TableRow from \"@mui/material/TableRow\";\nimport { IconButton, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FilterAltIcon from \"@mui/icons-material/FilterAlt\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n import PushPinIcon from \"@mui/icons-material/PushPin\";\n import { deletePattern, pinPattern, fetchCombinedPatterns } from \"../../actions/pattern_actions.jsx\";\nimport {\n  updatePatterns,\n} from \"../../actions/Dataslice.jsx\";\n\nexport default function TabelView(props) {\n  const [locked, setLocked] = React.useState(false);\n\n  const workspace = useSelector((state) => state.workspace);\n\n  const dispatch = useDispatch();\n\n  const refresh = () => {\n    dispatch(fetchCombinedPatterns()).then((response) => {});\n  };\n  const handleVisiblityLock = (row) => {\n    if (!locked && props.setHovering) {\n      props.setHovering(row[\"pattern\"]);\n      setLocked(true);\n    } else if (locked && props.setHovering) {\n      if (props.hovering == row[\"pattern\"]) {\n        setLocked(false);\n        props.setHovering(null);\n      } else {\n        props.setHovering(row[\"pattern\"]);\n      }\n    }\n  };\n\n  const handleDeletePattern = (row) => {\n    dispatch(updatePatterns({ pattern: row[\"pattern\"], status: 0 }));\n    dispatch(\n      deletePattern({\n        theme: workspace.selectedTheme,\n        pattern: row[\"pattern\"],\n      })\n    ).then((response) => {\n      refresh();\n    });\n  };\n\n  const handlePinPattern = (row) => {\n    dispatch(updatePatterns({ pattern: row[\"pattern\"], status: 1 }));\n    dispatch(\n      pinPattern({\n        theme: workspace.selectedTheme,\n        pattern: row[\"pattern\"],\n      })\n    ).then((response) => {\n      refresh();\n    });\n  };\n\n  const handleExplain = (event, row) => {\n    props.handelOpenModal(row);\n  };\n\n  return (\n    <Paper\n      sx={{\n        width: \"100%\",\n        paddingBottom: \"20px\",\n        overflow: \"hidden\",\n        marginBottom: \"5px\",\n      }}\n    >\n      {props.loading && <LinearProgress width={\"100%\"} />}\n      <>\n        <TableContainer>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {props.columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                    sx={{ backgroundColor: \"#000000\", color: \"#FFFFFF\" }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n                <TableCell\n                  sx={{ backgroundColor: \"#000000\", color: \"#FFFFFF\" }}\n                ></TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {props.data &&\n                props.data\n                  // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    return (\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={row.code}\n                        sx={{\n                          ...(props.hovering == row[\"pattern\"] && {\n                            backgroundColor: \"#f5f5f5\",\n                          }),\n                        }}\n                      >\n                        {props.columns.map((column, index) => {\n                          const value = row[column.id];\n                          return (\n                            <TableCell\n                              sx={{ ...(index == 0 && { fontWeight: 700 }) }}\n                              key={column.id}\n                              align={column.align}\n                            >\n                              {index == 0 && (\n                                <IconButton\n                                  onClick={(event) => handleExplain(event, row)}\n                                >\n                                  <InfoIcon />\n                                </IconButton>\n                              )}\n                              {typeof value === \"number\"\n                                ? parseFloat(value).toFixed(2)\n                                : value}\n                            </TableCell>\n                          );\n                        })}\n                        {!workspace.loadingPatterns &&\n                          !workspace.loadingCombinedPatterns && (\n                            <>\n                              <TableCell key={\"filter\"}>\n                                {props.index == 0 && (\n                                  <Tooltip\n                                    title={\n                                      props.hovering == row[\"pattern\"]\n                                        ? \"Turn-off filter\"\n                                        : \"Filter with pattern\"\n                                    }\n                                  >\n                                    <IconButton\n                                      onClick={() => handleVisiblityLock(row)}\n                                    >\n                                      <FilterAltIcon\n                                        color={\n                                          props.hovering == row[\"pattern\"]\n                                            ? \"primary\"\n                                            : \"disabled\"\n                                        }\n                                      />\n                                    </IconButton>\n                                  </Tooltip>\n                                )}\n                                {row[\"status\"] == 1 ? (\n                                  <IconButton>\n                                    <DeleteIcon\n                                      onClick={() => handleDeletePattern(row)}\n                                    />\n                                  </IconButton>\n                                ) : (\n                                  <IconButton>\n                                    <PushPinIcon\n                                      onClick={() => handlePinPattern(row)}\n                                    />\n                                  </IconButton>\n                                )}\n                              </TableCell>\n                            </>\n                          )}\n                      </TableRow>\n                    );\n                  })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </>\n    </Paper>\n  );\n}\n","import * as React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeSetting } from \"../../actions/Dataslice\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { fetchGroupedDataset } from \"../../actions/dataset_actions\";\n\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select from \"@mui/material/Select\";\n\nexport default function Settings(props) {\n  const workspace = useSelector((state) => state.workspace);\n\n  const dispatch = useDispatch();\n\n  const options = workspace.orderSetting;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuItemClick = (event, index) => {\n    dispatch(changeSetting({ selectedSetting: index }));\n    if (index == 0 && workspace.selectedGroupSetting == 0)\n      dispatch(fetchGroupedDataset({ selectedSetting: 0 }));\n    setAnchorEl(null);\n  };\n\n  return (\n    <FormControl>\n      <InputLabel id=\"demo-simple-select-label\">{\"Rank By\"}</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={workspace.selectedSetting}\n        label=\"Rank By\"\n        onChange={(event) => handleMenuItemClick(event, event.target.value)}\n        size=\"small\"\n      >\n        {Object.keys(options).map((key, index) => (\n          <MenuItem key={`ordering_${key}`} value={key}>\n            {options[key]}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import * as React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport AutoFixHighIcon from \"@mui/icons-material/AutoFixHigh\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchGroupedDataset } from \"../../actions/dataset_actions\";\nimport {\n  changeGroupingSetting,\n  changeSetting,\n} from \"../../actions/Dataslice\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { Typography } from \"@material-ui/core\";\nimport Grid from \"@mui/material/Grid\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select from \"@mui/material/Select\";\nconst styles = (theme) => ({\n  checked: {},\n});\n\nexport default function GroupingSettings(props) {\n  const workspace = useSelector((state) => state.workspace);\n\n  const dispatch = useDispatch();\n\n  const options = workspace.groupingSettings;\n\n  const [value, setValue] = React.useState(\"\");\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    dispatch(changeGroupingSetting({ selectedSetting: event.target.value }));\n\n    dispatch(fetchGroupedDataset({ selectedSetting: event.target.value }));\n\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <FormControl>\n      <InputLabel id=\"demo-simple-select-label\">{\"Group By\"}</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={workspace.selectedGroupSetting}\n        label=\"Group By\"\n        onChange={(event) => handleMenuItemClick(event, event.target.value)}\n        size=\"small\"\n      >\n        {Object.keys(options).map((key, index) => (\n          <MenuItem\n            key={`grouping_${key}`}\n            value={key}\n            disabled={\n              (key == 1 &&\n                Object.keys(workspace.selectedPatterns).length < 1) ||\n              (key == 2 && Object.keys(workspace.element_to_label).length < 1)\n            }\n          >\n            {options[key]}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    flexGrow: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  button: {\n    margin: `${theme.spacing(1)} auto`,\n  },\n  progress: {\n    height: \"50px\",\n  },\n  colorPrimary: {\n    backgroundColor: \"green\", //props => props.color,\n  },\n\n  barColorPrimary: {\n    backgroundColor: \"red\",\n  },\n  bar: (props) => ({\n    backgroundColor: props.color,\n  }),\n}));\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n  },\n  colorPrimary: {\n    backgroundColor: \"#e2e8e5 !important\",\n  },\n  bar: (props) => ({\n    borderRadius: 5,\n    backgroundColor: `${props.bgColor} !important`,\n  }),\n}))(LinearProgress);\n\nexport default function ProgressButton(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Button\n        onClick={() => {\n          props.retrain();\n        }}\n        size={\"small\"}\n        className={classes.button}\n        sx={{ backgroundColor: props.color }}\n        variant=\"contained\"\n      >\n        <div style={{ fontWeight: \"bold\" }}>\n          {/* <BorderLinearProgress  bgColor={props.color} sx={{minHeight:\"20px\"}}  variant=\"determinate\" value={props.value} /> */}\n          Retrain in{\" \"}\n          {props.userAnnotationTracker < props.annotationPerRetrain\n            ? `${props.annotationPerRetrain - props.userAnnotationTracker}`\n            : \"0\"}\n        </div>\n      </Button>\n    </div>\n  );\n}\n","import {\n  AppBar,\n  Typography,\n  FormControlLabel,\n  Switch,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Stack, Chip, IconButton } from \"@mui/material\";\nimport Settings from \"../../sharedComponents/Menu/index\";\nimport GroupingSettings from \"../../sharedComponents/Menu/grouping_setting\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Divider from \"@mui/material/Divider\";\nimport { Box } from \"@material-ui/core\";\nimport ProgressButton from \"../../sharedComponents/ProgressButton\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Button from \"@mui/material/Button\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport TextField from \"@mui/material/TextField\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { lighten } from \"@material-ui/core\";\nimport { toggleBinaryMode } from \"../../actions/annotation_actions\";\nimport {\n  addTheme,\n  clearAnnotations,\n  updateBinaryMode,\n} from \"../../actions/Dataslice\";\nimport { addThemeRemote, setTheme } from \"../../actions/theme_actions\";\nexport default function Header(props) {\n  const dispatch = useDispatch();\n\n  const workspace = useSelector((state) => state.workspace);\n\n  const navigate = useNavigate();\n\n  const [addNewTheme, setAddNewTheme] = React.useState(false);\n  const [userAnnotationPercent, setUserAnnotationPercent] = React.useState(0);\n  const [modelAnnotationPercent, setModelAnnotationPercent] = React.useState(0);\n\n  React.useState(0);\n  const [nextColor, setNextColor] = React.useState(null);\n\n  React.useEffect(() => {\n    setNextColor(workspace.color_schema[workspace.themes.length]);\n  }, [workspace.themes]);\n\n  React.useEffect(() => {\n    if (props.userAnnotationCount && props.totalDataset > 0) {\n      setUserAnnotationPercent(\n        (props.userAnnotationCount / props.totalDataset) * 100\n      );\n    }\n  }, [props.userAnnotationCount]);\n  React.useEffect(() => {\n    if (workspace.modelAnnotationCount != null && props.totalDataset > 0) {\n      setModelAnnotationPercent(\n        (workspace.modelAnnotationCount / props.totalDataset) * 100\n      );\n    }\n  }, [props.modelAnnotationCount, workspace.modelAnnotationCount]);\n\n  const handleAddNewTheme = (event) => {\n    if (event.key === \"Enter\" && event.target.value.trim() != \"\") {\n      //dispatch add new theme\n      dispatch(\n        addTheme({ theme: event.target.value, index: props.themes.length })\n      );\n      dispatch(addThemeRemote({ theme: event.target.value }));\n      if (workspace.selectedTheme == null) {\n        dispatch(setTheme({ theme: event.target.value }));\n      }\n      setAddNewTheme(false);\n    }\n  };\n\n  const handleThemeChange = (event) => {\n    if (event.target.value == \"add_new_theme\") {\n      event.preventDefault();\n      setAddNewTheme(!addNewTheme);\n    } else {\n      props.setTheme(event.target.value);\n      dispatch(clearAnnotations());\n    }\n  };\n  const handleChangeBinaryMode = () => {\n    dispatch(updateBinaryMode());\n    dispatch(toggleBinaryMode({ binary_mode: props.binary_mode }));\n  };\n\n  return (\n    <AppBar ml={2} color=\"inherit\" maxHeight={\"140px\"}>\n      <Box\n        maxHeight={\"35px\"}\n        sx={{ backgroundColor: \"#000000\", display: \"inline\" }}\n        width={\"100vw\"}\n      >\n        <Typography\n          variant=\"h5\"\n          style={{\n            display: \"inline\",\n            fontFamily: \"Indie Flower\",\n            color: \"#FFFFFF\",\n            width: \"0px\",\n          }}\n        >\n          PaTAT\n        </Typography>\n      </Box>\n\n      <Stack\n        direction={\"row\"}\n        ml={2}\n        justifyContent=\"center\"\n        spacing={1}\n        divider={<Divider orientation=\"vertical\" flexItem />}\n        alignItems=\"center\"\n      >\n        <Settings />\n\n        <GroupingSettings />\n\n        <ProgressButton\n          color={props.color_code[props.selectedTheme]}\n          retrain={props.retrain}\n          userAnnotationTracker={props.userAnnotationTracker}\n          annotationPerRetrain={props.annotationPerRetrain}\n          value={\n            ((props.userAnnotationCount % props.annotationPerRetrain) /\n              props.annotationPerRetrain) *\n              100 || 0\n          }\n        />\n\n        <Stack\n          sx={{\n            alignContent: \"center\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexGrow: 1,\n          }}\n          ml={2}\n          mr={2}\n          direction={\"row\"}\n          spacing={1}\n        >\n          {/* <Typography >Progress:</Typography> */}\n\n          <Stack\n            p={2}\n            sx={{\n              alignContent: \"center\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            ml={2}\n            mr={2}\n            direction={\"column\"}\n          >\n            {/* <CircularProgress thickness={10} variant=\"determinate\" value={(props.userAnnotationCount/props.totalDataset)*100} /> */}\n\n            <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n              <CircularProgress\n                thickness={20}\n                variant=\"determinate\"\n                value={userAnnotationPercent}\n                //backgroundColor:`${lighten('#86de8c', 1-props.score)}\n                sx={{\n                  color:\n                    props.selectedTheme && props.color_code[props.selectedTheme]\n                      ? lighten(props.color_code[props.selectedTheme], 0.5)\n                      : \"#FFFFFF\",\n                }}\n              />\n              <Box\n                sx={{\n                  top: 0,\n                  left: 0,\n                  bottom: 0,\n                  right: 0,\n                  position: \"absolute\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Typography variant=\"caption\" component=\"div\">\n                  {`${Math.round(userAnnotationPercent)}%`}\n                </Typography>\n              </Box>\n            </Box>\n\n            <Typography variant=\"caption\" color={\"textSecondary\"}>\n              You\n            </Typography>\n          </Stack>\n\n          <Stack\n            p={2}\n            sx={{\n              alignContent: \"center\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            ml={2}\n            mr={2}\n            direction={\"column\"}\n          >\n            <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n              <CircularProgress\n                thickness={20}\n                variant=\"determinate\"\n                value={modelAnnotationPercent}\n                sx={{\n                  color:\n                    props.selectedTheme && props.color_code[props.selectedTheme]\n                      ? lighten(props.color_code[props.selectedTheme], 0.5)\n                      : \"#FFFFFF\",\n                }}\n              />\n              <Box\n                sx={{\n                  top: 0,\n                  left: 0,\n                  bottom: 0,\n                  right: 0,\n                  position: \"absolute\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Typography variant=\"caption\" component=\"div\">\n                  {`${Math.round(modelAnnotationPercent)}%`}\n                </Typography>\n              </Box>\n            </Box>\n            <Typography variant=\"caption\" color={\"textSecondary\"}>\n              Model\n            </Typography>\n          </Stack>\n        </Stack>\n\n        <Stack p={2} sx={{ minWidth: \"200px\" }}>\n          {/* <Typography>{props.selectedTheme}</Typography> */}\n\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">Theme</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={props.selectedTheme ? props.selectedTheme : \"\"}\n              label=\"Theme\"\n              onChange={(event) => handleThemeChange(event)}\n              displayEmpty\n            >\n              {props.themes.map((theme, index) => (\n                <MenuItem\n                  size=\"small\"\n                  // sx={{ textTransform: \"capitalize\" }}\n                  value={theme}\n                  key={`theme_${theme}`}\n                >\n                  <Chip\n                    key={`menuitem_${theme}_light`}\n                    label={\"\"}\n                    color={\"primary\"}\n                    sx={{\n                      backgroundColor: props.color_code[theme],\n                      width: 20,\n                      height: 20,\n                      marginRight: 1,\n                    }}\n                    size=\"small\"\n                  />{\" \"}\n                  {theme}\n                </MenuItem>\n              ))}\n              <MenuItem\n                size=\"small\"\n                onKeyDown={(e) => e.stopPropagation()}\n                onClickCapture={(e) => {\n                  e.stopPropagation();\n                  if (!addNewTheme) {\n                    setNextColor(\n                      workspace.color_schema[workspace.themes.length]\n                    );\n\n                    setAddNewTheme(!addNewTheme);\n                  }\n                }}\n                value={\"add_new_theme\"}\n                key={`theme_add_new`}\n              >\n                {addNewTheme ? (\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"flex-end\",\n                      width: \"100%\",\n                    }}\n                  >\n                    <Chip\n                      key={`menuitem_new_theme_light${props.themes.length}`}\n                      label={\"\"}\n                      color={\"primary\"}\n                      sx={{\n                        backgroundColor: nextColor,\n                        width: 20,\n                        height: 20,\n                        marginRight: 1,\n                        mr: 1,\n                        my: 0.5,\n                      }}\n                      size=\"small\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      onKeyDown={handleAddNewTheme}\n                      id=\"input-with-sx\"\n                      label=\"New Theme\"\n                      variant=\"standard\"\n                      inputRef={(input) => input && input.focus()}\n                      onChange={(event) => {\n                        event.target.value = event.target.value.toLowerCase();\n                      }}\n                      placeholder={\"Theme\"}\n                      multiline\n                      rowsMax=\"3\"\n                      fullWidth={true}\n                    />\n                  </Box>\n                ) : (\n                  <Button variant=\"outlined\" startIcon={<AddIcon />}>\n                    Add Theme\n                  </Button>\n                )}\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </Stack>\n\n        <FormControlLabel\n          control={\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              <Typography>Multi-label</Typography>\n              <Switch\n                disabled={\n                  workspace.themes.length == 0 ||\n                  workspace.selectedTheme == null\n                }\n                style={{ color: props.color_code[props.selectedTheme] }}\n                value={props.binary_mode}\n                onChange={() => {\n                  handleChangeBinaryMode();\n                }}\n              />\n              <Typography>Binary</Typography>\n            </Stack>\n          }\n        />\n      </Stack>\n    </AppBar>\n  );\n}\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Stack } from \"@mui/material\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useEffect } from \"react\";\nimport Highlighter from \"react-highlight-words\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./index.css\";\nimport { ListItem } from \"@material-ui/core\";\n\nexport default function SentenceLight(props) {\n  const workspace = useSelector((state) => state.workspace);\n  const [labeled, setLabeled] = React.useState(\n    workspace.element_to_label[props.element.id] &&\n      workspace.element_to_label[props.element.id].includes(\n        workspace.selectedTheme\n      )\n      ? 1\n      : workspace.negative_element_to_label[props.element.id] &&\n        workspace.negative_element_to_label[props.element.id].includes(\n          workspace.selectedTheme\n        )\n      ? 0\n      : null\n  );\n  const [toHighlight, setToHighlight] = React.useState([]);\n\n  const handleClick = (id, label) => {\n    setLabeled(label);\n    props.handleBatchLabel(id, label);\n  };\n\n  useEffect(() => {\n    if (props.highlight) {\n      let to_highlight = [];\n      props.highlight.forEach((element, index) => {\n        if (props.highlightAsList) {\n          let phrase = element[0] && element[0].join(\" \");\n          if (phrase) {\n            to_highlight.push(phrase);\n          }\n        } else {\n          to_highlight.push(element);\n        }\n      });\n\n      setToHighlight(to_highlight);\n    }\n  }, []);\n\n  const Highlight = ({ children, highlightIndex }) => (\n    <span className=\"highlight\" style={{ backgroundColor: props.color }}>\n      {children}\n    </span>\n  );\n\n  return (\n    <>\n      {props.show ? (\n        <ListItem onClick={() => {}}>\n          <Stack\n            sx={{\n              backgroundColor: \"#eeeeee55\",\n              width: \"100%\",\n              justifyContent: \"space-between\",\n            }}\n            direction={\"row\"}\n            alignItems={\"top\"}\n          >\n            <Typography\n              color=\"text.secondary\"\n              align=\"left\"\n              variant=\"body2\"\n              display=\"block\"\n              gutterBottom\n            >\n              {!props.highlight && <>{props.element.example}</>}\n              {props.highlight && (\n                <Highlighter\n                  highlightTag={Highlight}\n                  searchWords={toHighlight}\n                  textToHighlight={props.element.example}\n                />\n              )}\n            </Typography>\n\n            {props.handleBatchLabel && (\n              <Stack direction={\"row\"} alignItems={\"top\"}>\n                <IconButton onClick={() => handleClick(props.element.id, 1)}>\n                  {\" \"}\n                  <CheckCircleOutlineIcon\n                    color={labeled == 1 ? \"success\" : \"disabled\"}\n                  />\n                </IconButton>\n                <IconButton onClick={() => handleClick(props.element.id, 0)}>\n                  {\" \"}\n                  <HighlightOffIcon\n                    color={labeled == 0 ? \"error\" : \"disabled\"}\n                  />\n                </IconButton>\n              </Stack>\n            )}\n          </Stack>\n        </ListItem>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteSoftmatch,\n  explainPattern,\n  updatePatExp,\n} from \"../../actions/Dataslice\";\nimport { CircularProgress, Divider } from \"@mui/material\";\nimport Chip from \"@mui/material/Chip\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"1px solid #cccccc\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function CustomLoading() {\n  const workspace = useSelector((state) => state.workspace);\n\n  return (\n    <Backdrop\n      sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }}\n      open={workspace.loading}\n    >\n      <CircularProgress\n        color=\"inherit\"\n        sx={{\n          ...style,\n          flexShrink: 0,\n          left: 0,\n          right: 0,\n          margin: \"0 auto\",\n          opacity: 0.7,\n          backgroundColor: workspace.color_code[workspace.selectedTheme],\n        }}\n      />\n    </Backdrop>\n  );\n}\n","import * as React from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport Typography from \"@mui/material/Typography\";\nimport { Stack, Chip, Button } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport ArrowCircleLeftIcon from \"@mui/icons-material/ArrowCircleLeft\";\nimport ArrowCircleRightIcon from \"@mui/icons-material/ArrowCircleRight\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SentenceLight from \"../Sentence/sentenceLight\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUserlabeledData } from \"../../actions/dataset_actions\";\nimport { renameThemeRemote, splitThemeByPattern } from \"../../actions/theme_actions\";\nimport {\n  \n  clearAnnotations,\n  renameThemeLocal,\n  \n} from \"../../actions/Dataslice\";\nimport { CircularProgress, Divider } from \"@mui/material\";\nimport { lighten } from \"@material-ui/core\";\nimport Fab from \"@mui/material/Fab\";\nimport { CSS_COLOR_NAMES } from \"../../assets/color_assets\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { deleteTheme, mergeThemes, splitTheme } from \"../../actions/theme_actions\";\nimport { TransferWithinAStationTwoTone } from \"@mui/icons-material\";\nimport CustomLoading from \"../Loading/Loading\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 900,\n\n  bgcolor: \"background.paper\",\n  border: \"1px solid #cccccc\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function SplitThemeModal({\n  open,\n  setOpen,\n  theme,\n  action,\n  actionType,\n  retrain,\n}) {\n  const workspace = useSelector((state) => state.workspace);\n\n  const dispatch = useDispatch();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [sentences, setSentences] = React.useState([{}, {}]);\n  const [patterns, setPatterns] = React.useState([[], []]);\n  const [groupNames, setGroupNames] = React.useState([``, ``]);\n  const [patternsToSplit, setPatternsToSplit] = React.useState({});\n  const [splitByPattern, setSplitByPattern] = React.useState(false);\n  const [splitStage, setSplitStage] = React.useState(null);\n  const [loadingLeft, setLoadingLeft] = React.useState(false);\n  const [loadingRight, setLoadingRight] = React.useState(false);\n\n  const [renameTheme, setRenameTheme] = React.useState(theme);\n\n  const [mergedName, setMergeName] = React.useState(\"\");\n  const [defaultMergeName, setDefaultMergeName] = React.useState(\"\");\n  const [nextColor, setNextColor] = React.useState(null);\n\n  React.useEffect(() => {\n    if (actionType == \"merge\") {\n      setDefaultMergeName(`${groupNames[0]}_${groupNames[1]}`);\n    }\n  }, [groupNames[0], groupNames[1]]);\n\n  React.useEffect(() => {\n    setRenameTheme(theme);\n  }, [theme]);\n  const handleDeleteTheme = (selectedTheme) => {\n    dispatch(deleteTheme({ theme: selectedTheme })).then(() => {\n      dispatch(clearAnnotations());\n      retrain();\n    });\n  };\n  const handleSplitTheme = (selectedTheme, group1, group2) => {\n    dispatch(splitTheme({ theme: selectedTheme, group1, group2 })).then(\n      (response) => {\n      }\n    );\n  };\n\n  const getExamples = () => {\n    dispatch(\n      splitThemeByPattern({\n        theme: workspace.selectedTheme,\n        patterns: patterns[1],\n        new_theme_name: groupNames[1],\n      })\n    ).then((response) => {\n      setLoadingLeft(false);\n      setSentences([response.payload[\"group1\"], response.payload[\"group2\"]]);\n    });\n  };\n\n  const handleAction = (type) => {\n    switch (type) {\n      case \"delete\":\n        handleDeleteTheme(workspace.selectedTheme);\n        handleClose();\n        break;\n      case \"split\":\n        updateGrouping();\n        handleClose();\n        break;\n      case \"rename\":\n        if (renameTheme.trim() != \"\") {\n          dispatch(\n            renameThemeLocal({\n              theme: workspace.selectedTheme,\n              new_name: renameTheme.trim(),\n            })\n          );\n\n          dispatch(\n            renameThemeRemote({\n              theme: workspace.selectedTheme,\n              new_name: renameTheme.trim(),\n            })\n          );\n          handleClose();\n        }\n        break;\n      case \"merge\":\n        if (groupNames[0] && groupNames[1] && groupNames[1].trim() != \"\") {\n          dispatch(\n            mergeThemes({\n              theme1: workspace.selectedTheme,\n              theme2: groupNames[1],\n              new_theme:\n                mergedName.trim() == \"\" ? defaultMergeName : mergedName,\n            })\n          ).then((response) => {\n            setDefaultMergeName(\"\");\n            setMergeName(\"\");\n          });\n          handleClose();\n        }\n        break;\n      default:\n      // code block\n    }\n  };\n\n  const setName = (value, index) => {\n    let new_groupNames = [...groupNames];\n    new_groupNames[index] = value;\n    setGroupNames(new_groupNames);\n  };\n  React.useEffect(() => {\n    if (actionType == \"merge\" || actionType == \"split\") {\n      setLoadingLeft(true);\n      setDefaultMergeName(`${groupNames[0]}`);\n    }\n  }, [actionType]);\n  React.useEffect(() => {\n    if (open) {\n      setNextColor(workspace.color_schema[workspace.themes.length]);\n      if (actionType == \"split\") {\n        if (Object.keys(workspace.explanation).length <= 1) {\n          setSplitStage(1);\n          dispatch(\n            fetchUserlabeledData({ theme: workspace.selectedTheme })\n          ).then((stuff) => {\n            setLoadingLeft(false);\n            setSentences([stuff.payload, {}]);\n          });\n        } else {\n          setSplitStage(0);\n          setPatterns([Object.keys(workspace.explanation), []]);\n        }\n        setGroupNames([workspace.selectedTheme, \"\"]);\n      } else if (actionType == \"delete\") {\n        setGroupNames([\"hello\", \"there\"]);\n      } else if (actionType == \"merge\") {\n        setLoadingLeft(true);\n        setGroupNames([`${workspace.selectedTheme}`, \"\"]);\n\n        dispatch(fetchUserlabeledData({ theme: workspace.selectedTheme })).then(\n          (stuff) => {\n            let new_sentences = sentences;\n            new_sentences[0] = stuff.payload;\n            setSentences([...new_sentences]);\n            setLoadingLeft(false);\n          }\n        );\n      }\n    }\n  }, [actionType, open]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setSentences([{}, {}]);\n    setSplitStage(null);\n  };\n\n  const setSecondGroupToMerge = (theme) => {\n    let new_group_names = groupNames;\n    new_group_names[1] = theme;\n    setGroupNames(new_group_names);\n    setAnchorEl(null);\n    dispatch(fetchUserlabeledData({ theme: theme })).then((response) => {\n      setLoadingRight(false);\n      let new_sentences = sentences;\n      if (new_sentences) {\n        new_sentences[1] = response.payload;\n      } else {\n        new_sentences = [{}, response.payload];\n      }\n\n      setSentences([...new_sentences]);\n    });\n  };\n  const updateGrouping = () => {\n    let group1 = { name: groupNames[0], data: sentences[0] };\n\n    let group2 = { name: groupNames[1], data: sentences[1] };\n\n    handleSplitTheme(workspace.selectedTheme, group1, group2);\n    handleClose();\n    dispatch(clearAnnotations());\n    retrain();\n  };\n\n  const SplitByPatternAction = () => {\n    dispatch(\n      splitThemeByPattern({\n        theme: workspace.selectedTheme,\n        patterns: Object.keys(patternsToSplit),\n        new_theme_name: groupNames[1],\n      })\n    ).then((response) => {\n      dispatch(clearAnnotations());\n      retrain();\n      handleClose();\n    });\n  };\n  const handlePatternRegroup = (source, target, index) => {\n    let new_patterns = [...patterns];\n\n    let removed = new_patterns[source].splice(index, 1);\n\n    new_patterns[target].push(removed[0]);\n\n    setPatterns(new_patterns);\n  };\n  const handleRegroup = (source, target, sentenceId) => {\n    let new_sentences = [...sentences];\n\n    let temp_sentence = [...new_sentences[source][sentenceId]];\n\n    new_sentences[target][sentenceId] = temp_sentence;\n\n    delete new_sentences[source][sentenceId];\n\n    setSentences(new_sentences);\n  };\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n      sx={{ overflow: \"scroll\" }}\n    >\n      <Fade in={open}>\n        <Box\n          sx={{\n            ...style,\n            overflow: \"hidden\",\n          }}\n        >\n          <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n            Updating{\" \"}\n            <Chip\n              key={`menuitem_${workspace.selectedTheme}_light`}\n              label={\"\"}\n              color={\"primary\"}\n              sx={{\n                backgroundColor: workspace.color_code[workspace.selectedTheme],\n                width: 20,\n                height: 20,\n                marginRight: 1,\n              }}\n              size=\"small\"\n            />{\" \"}\n            {workspace.selectedTheme} - {actionType}\n          </Typography>\n          <Divider />\n          {actionType == \"split\" && (\n            <Stack\n              id=\"transition-modal-description\"\n              sx={{\n                mt: 2,\n                position: \"relative\",\n                overflow: \"hidden\",\n\n                height: \"70vh\",\n              }}\n              direction=\"column\"\n              spacing={5}\n            >\n              <>\n                <Stack direction={\"row\"} style={{ minHeight: \"50vh\" }}>\n                  <Stack\n                    divider={<Divider orientation=\"horizontal\" flexItem />}\n                    id=\"transition-modal-description\"\n                    direction=\"column\"\n                    width={450}\n                    spacing={5}\n                    sx={{\n                      maxHeight: \"50vh\",\n                      overflow: \"scroll\",\n                    }}\n                  >\n                    <Stack\n                      sx={{\n                        position: \"sticky\",\n                        top: \"0px\",\n                        backgroundColor: \"#FFFFFF\",\n                        zIndex: 100,\n                      }}\n                    >\n                      <TextField\n                        id=\"standard-basic\"\n                        variant=\"outlined\"\n                        value={groupNames[0]}\n                        onChange={(event) => {\n                          setName(event.target.value.toLowerCase(), 0);\n                        }}\n                        InputProps={{\n                          startAdornment: (\n                            <Chip\n                              label={\"\"}\n                              color={\"primary\"}\n                              sx={{\n                                backgroundColor:\n                                  workspace.color_code[workspace.selectedTheme],\n                                width: 20,\n                                height: 20,\n                                marginRight: 1,\n                              }}\n                              size=\"small\"\n                            />\n                          ),\n                        }}\n                      />\n                    </Stack>\n                    {splitStage == 0 ? (\n                      <>\n                        {patterns &&\n                          patterns[0].map((pattern, index) => (\n                            <Stack direction={\"row\"}>\n                              <Typography>{pattern}</Typography>\n                              <IconButton\n                                onClick={() => {\n                                  handlePatternRegroup(0, 1, index);\n                                }}\n                              >\n                                <ArrowCircleRightIcon />\n                              </IconButton>\n                            </Stack>\n                          ))}\n                      </>\n                    ) : (\n                      <>\n                        {loadingLeft && splitStage == 1 && (\n                          <>\n                            <CircularProgress />\n                          </>\n                        )}\n                        {sentences &&\n                          sentences[0] &&\n                          Object.keys(sentences[0]).length > 0 &&\n                          Object.keys(sentences[0]).map((key, index) => (\n                            <Stack\n                              direction={\"row\"}\n                              key={`groupsent_stack_${key}`}\n                            >\n                              <SentenceLight\n                                color={\n                                  workspace.color_code[workspace.selectedTheme]\n                                    ? lighten(\n                                        workspace.color_code[\n                                          workspace.selectedTheme\n                                        ],\n                                        0.5\n                                      )\n                                    : \"blue\"\n                                }\n                                show={true}\n                                // highlight={workspace.relatedExplanation[element.id]}\n                                element={workspace.elements[key]}\n                                handleBatchLabel={null}\n                                sentence={sentences[0][key][0]}\n                                key={`groupsent_${key}`}\n                              />\n\n                              {/* <Typography>{sentences[0][key][0]}</Typography> */}\n                              <IconButton\n                                onClick={() => {\n                                  handleRegroup(0, 1, key);\n                                }}\n                              >\n                                <ArrowCircleRightIcon />\n                              </IconButton>\n                            </Stack>\n                          ))}\n                      </>\n                    )}\n                  </Stack>\n\n                  <Stack\n                    divider={<Divider orientation=\"horizontal\" flexItem />}\n                    id=\"transition-modal-description\"\n                    direction=\"column\"\n                    width={450}\n                    spacing={5}\n                    sx={{ maxHeight: \"50vh\", overflow: \"scroll\" }}\n                  >\n                    <Stack\n                      sx={{\n                        position: \"sticky\",\n                        top: \"0px\",\n                        backgroundColor: \"#FFFFFF\",\n                        zIndex: 100,\n                      }}\n                    >\n                      <TextField\n                        placeholder={\"Theme\"}\n                        id=\"standard-basic\"\n                        variant=\"outlined\"\n                        value={groupNames[1]}\n                        onChange={(event) => {\n                          setName(event.target.value.toLowerCase(), 1);\n                        }}\n                        InputProps={{\n                          startAdornment: (\n                            <Chip\n                              label={\"\"}\n                              color={\"primary\"}\n                              sx={{\n                                backgroundColor: nextColor,\n                                width: 20,\n                                height: 20,\n                                marginRight: 1,\n                              }}\n                              size=\"small\"\n                            />\n                          ),\n                        }}\n                      />\n                    </Stack>\n                    {splitStage == 0 ? (\n                      <>\n                        {patterns[1].map((pattern, index) => (\n                          <Stack direction={\"row\"}>\n                            <IconButton\n                              onClick={() => {\n                                handlePatternRegroup(1, 0, index);\n                              }}\n                            >\n                              <ArrowCircleLeftIcon />\n                            </IconButton>\n                            <Typography>{pattern}</Typography>\n                          </Stack>\n                        ))}\n                      </>\n                    ) : (\n                      <>\n                        {sentences &&\n                          sentences[1] &&\n                          Object.keys(sentences[1]).length > 0 &&\n                          Object.keys(sentences[1]).map((key, index) => (\n                            <Stack\n                              direction={\"row\"}\n                              key={`groupsent_stack_${key}`}\n                            >\n                              <IconButton\n                                onClick={() => {\n                                  handleRegroup(1, 0, key);\n                                }}\n                              >\n                                <ArrowCircleLeftIcon />\n                              </IconButton>\n                              <SentenceLight\n                                color={\n                                  workspace.color_code[workspace.selectedTheme]\n                                    ? lighten(\n                                        workspace.color_code[\n                                          workspace.selectedTheme\n                                        ],\n                                        0.5\n                                      )\n                                    : `${lighten(\"#ececec\", 0.5)}`\n                                }\n                                show={true}\n                                // highlight={workspace.relatedExplanation[element.id]}\n                                element={workspace.elements[key]}\n                                handleBatchLabel={null}\n                                sentence={sentences[1][key][0]}\n                                key={`groupsent_${key}`}\n                              />\n                            </Stack>\n                          ))}\n                      </>\n                    )}\n                  </Stack>\n                </Stack>\n\n                <Stack direction={\"row\"} spacing={5}>\n                  {Object.keys(workspace.explanation).length > 1 && (\n                    <Fab\n                      variant=\"extended\"\n                      m={10}\n                      color={\"primary\"}\n                      onClick={() => {\n                        if (splitStage == 0) {\n                          setSplitStage(1);\n                          //get examples with this grouping\n                          getExamples();\n                        } else setSplitStage(0);\n                      }}\n                    >\n                      {splitStage == 0 ? \"Next\" : \"Back\"}\n                    </Fab>\n                  )}\n\n                  <Fab\n                    variant=\"extended\"\n                    m={10}\n                    color={\"primary\"}\n                    onClick={() => updateGrouping()}\n                    disabled={\n                      !sentences ||\n                      (sentences &&\n                        (Object.keys(sentences[0]).length == 0 ||\n                          Object.keys(sentences[1]).length == 0)) ||\n                      groupNames[0].trim() == \"\" ||\n                      groupNames[1].trim() == \"\"\n                    }\n                  >\n                    Update\n                  </Fab>\n                </Stack>\n              </>\n            </Stack>\n          )}\n\n          {actionType == \"rename\" && (\n            <Stack direction={\"row\"} spacing={5} m={5}>\n              <TextField\n                inputRef={(input) => input && input.focus()}\n                placeholder={\"Theme\"}\n                value={renameTheme}\n                onChange={(event) =>\n                  setRenameTheme(event.target.value.toLowerCase())\n                }\n              />\n              <Button\n                variant=\"contained\"\n                onClick={() => {\n                  handleAction(actionType);\n                }}\n              >\n                Rename\n              </Button>\n            </Stack>\n          )}\n          {actionType == \"delete\" && (\n            <Stack spacing={3} mt={3}>\n              <Typography\n                id=\"transition-modal-title\"\n                variant=\"body2\"\n                gutterBottom\n              >\n                Are you sure you want to delete{\" \"}\n                <Chip\n                  label={\"\"}\n                  color={\"primary\"}\n                  sx={{\n                    backgroundColor:\n                      workspace.color_code[workspace.selectedTheme],\n                    width: 20,\n                    height: 20,\n                    marginRight: 1,\n                  }}\n                  size=\"small\"\n                />{\" \"}\n                {workspace.selectedTheme}?\n              </Typography>\n              <Stack direction={\"row\"} spacing={5}>\n                <Button\n                  size=\"small\"\n                  sx={{ backgroundColor: \"#bdbdbd\" }}\n                  variant={\"contained\"}\n                  onClick={() => handleClose()}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  size=\"small\"\n                  color={\"error\"}\n                  variant={\"contained\"}\n                  onClick={() => {\n                    handleAction(actionType);\n                  }}\n                >\n                  Delete\n                </Button>\n              </Stack>\n            </Stack>\n          )}\n\n          {actionType == \"merge\" && (\n            <>\n              <Stack\n                sx={{\n                  position: \"sticky\",\n                  top: \"0px\",\n                  backgroundColor: \"#FFFFFF\",\n                  zIndex: 100,\n                }}\n              >\n                <TextField\n                  id=\"standard-basic\"\n                  variant=\"outlined\"\n                  value={mergedName}\n                  placeholder={defaultMergeName}\n                  onChange={(event) => {\n                    setMergeName(event.target.value.toLowerCase());\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <Chip\n                        label={\"\"}\n                        color={\"primary\"}\n                        sx={{\n                          backgroundColor: nextColor,\n                          width: 20,\n                          height: 20,\n                          marginRight: 1,\n                        }}\n                        size=\"small\"\n                      />\n                    ),\n                  }}\n                />\n              </Stack>\n              <Stack\n                id=\"transition-modal-description\"\n                sx={{\n                  mt: 2,\n                  overflow: \"hidden\",\n                  position: \"relative\",\n                  height: \"50vh\",\n                }}\n                direction=\"row\"\n                spacing={5}\n                divider={<Divider orientation=\"vertical\" flexItem />}\n              >\n                <Stack\n                  divider={<Divider orientation=\"horizontal\" flexItem />}\n                  id=\"transition-modal-description\"\n                  direction=\"column\"\n                  width={450}\n                  spacing={5}\n                  sx={{ maxHeight: \"80vh\", overflow: \"scroll\" }}\n                >\n                  <Typography\n                    id=\"transition-modal-title\"\n                    variant=\"h6\"\n                    component=\"h2\"\n                    sx={{\n                      position: \"sticky\",\n                      top: \"0px\",\n                      backgroundColor: \"#FFFFFF\",\n                      zIndex: 5,\n                    }}\n                  >\n                    <Chip\n                      label={\"\"}\n                      color={\"primary\"}\n                      sx={{\n                        backgroundColor: workspace.color_code[groupNames[0]],\n                        width: 20,\n                        height: 20,\n                        marginRight: 1,\n                      }}\n                      size=\"small\"\n                    />{\" \"}\n                    {groupNames[0]}\n                  </Typography>\n                  {sentences &&\n                    sentences[0] &&\n                    Object.keys(sentences[0]).length > 0 &&\n                    Object.keys(sentences[0]).map((key, index) => (\n                      <Stack direction={\"row\"} key={`groupsent_stack_${key}`}>\n                        <SentenceLight\n                          color={\n                            workspace.color_code[workspace.selectedTheme]\n                              ? lighten(\n                                  workspace.color_code[workspace.selectedTheme],\n                                  0.5\n                                )\n                              : `${lighten(\"#ececec\", 0.5)}`\n                          }\n                          show={true}\n                          // highlight={workspace.relatedExplanation[element.id]}\n                          element={workspace.elements[key]}\n                          handleBatchLabel={null}\n                          sentence={sentences[0][key][0]}\n                          key={`groupsent_${key}`}\n                        />\n                      </Stack>\n                    ))}\n\n                  {loadingLeft && (\n                    <>\n                      <CircularProgress />\n                    </>\n                  )}\n                </Stack>\n\n                <Stack\n                  id=\"transition-modal-description\"\n                  direction=\"column\"\n                  width={450}\n                  spacing={5}\n                  sx={{ maxHeight: \"80vh\", overflow: \"scroll\" }}\n                >\n                  <Typography\n                    id=\"transition-modal-title\"\n                    variant=\"h6\"\n                    component=\"h2\"\n                    sx={{\n                      cursor: \"pointer\",\n                      position: \"sticky\",\n                      top: \"0px\",\n                      backgroundColor: \"#FFFFFF\",\n                      zIndex: 5,\n                    }}\n                    onClick={(event) => {\n                      setAnchorEl(event.target);\n                    }}\n                  >\n                    <Chip\n                      key={`menuitem_${groupNames[1]}_light`}\n                      label={\"\"}\n                      color={\"primary\"}\n                      sx={{\n                        backgroundColor: workspace.color_code[groupNames[1]],\n                        width: 20,\n                        height: 20,\n                        marginRight: 1,\n                      }}\n                      size=\"small\"\n                    />{\" \"}\n                    {groupNames[1].trim().length > 0\n                      ? groupNames[1]\n                      : \"Select Theme\"}\n                  </Typography>\n                  <Menu\n                    id=\"long-menu\"\n                    MenuListProps={{\n                      \"aria-labelledby\": \"long-button\",\n                    }}\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={() => setAnchorEl(null)}\n                    PaperProps={{\n                      style: {\n                        width: \"20ch\",\n                      },\n                    }}\n                  >\n                    {workspace.themes.map((theme) => (\n                      <MenuItem\n                        key={theme}\n                        disabled={theme == workspace.selectedTheme}\n                        onClick={(event) => {\n                          setLoadingRight(true);\n                          setSecondGroupToMerge(theme);\n                        }}\n                      >\n                        <Chip\n                          key={`menuitem_${theme}_light`}\n                          label={\"\"}\n                          color={\"primary\"}\n                          sx={{\n                            backgroundColor: workspace.color_code[theme],\n                            width: 20,\n                            height: 20,\n                            marginRight: 1,\n                          }}\n                          size=\"small\"\n                        />\n                        {theme}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                  <Divider orientation=\"horizontal\" flexItem />\n                  {sentences &&\n                    sentences[1] &&\n                    Object.keys(sentences[1]).length > 0 &&\n                    Object.keys(sentences[1]).map((key, index) => (\n                      <Stack direction={\"row\"} key={`groupsent_stack_${key}`}>\n                        <SentenceLight\n                          color={\n                            workspace.color_code[workspace.selectedTheme]\n                              ? lighten(\n                                  workspace.color_code[workspace.selectedTheme],\n                                  0.5\n                                )\n                              : `${lighten(\"#ececec\", 0.5)}`\n                          }\n                          show={true}\n                          // highlight={workspace.relatedExplanation[element.id]}\n                          element={workspace.elements[key]}\n                          handleBatchLabel={null}\n                          sentence={\"sentences[1][key][0]\"}\n                          key={`groupsent_${key}`}\n                        />\n                      </Stack>\n                    ))}\n\n                  {loadingRight && (\n                    <>\n                      <CircularProgress />\n                    </>\n                  )}\n                </Stack>\n              </Stack>\n              <Divider orientation=\"horizontal\" flexItem />\n              <Button\n                sx={{ marginTop: 5 }}\n                onClick={() => handleAction(actionType)}\n                variant={\"contained\"}\n              >\n                Merge\n              </Button>\n            </>\n          )}\n        </Box>\n      </Fade>\n    </Modal>\n  );\n}\n","import * as React from \"react\";\n\nimport Typography from \"@mui/material/Typography\";\nimport { Divider, Button, IconButton } from \"@mui/material\";\nimport { Stack, Chip } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DriveFileRenameOutlineIcon from \"@mui/icons-material/DriveFileRenameOutline\";\n\nimport SplitThemeModal from \"./SplitThemeModal\";\nexport default function Summary(props) {\n  const workspace = useSelector((state) => state.workspace);\n  const dispatch = useDispatch();\n\n  const [action, setAction] = React.useState(null);\n  const [actionType, setActionType] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <SplitThemeModal\n        open={open}\n        setOpen={setOpen}\n        action={action}\n        actionType={actionType}\n        retrain={props.retrain}\n        theme={workspace.selectedTheme}\n      />\n      <Stack direction={\"row\"} spacing={0}>\n        <Typography variant=\"h5\">\n          Patterns for{\" \"}\n          <Chip\n            key={`menuitem_new_theme_light_summary`}\n            label={\"\"}\n            color={\"primary\"}\n            sx={{\n              backgroundColor: props.color,\n              width: 20,\n              height: 20,\n              marginRight: 1,\n              mr: 1,\n              my: 0.5,\n            }}\n            size=\"small\"\n          />\n          {props.selectedTheme}\n        </Typography>\n        <Button\n          onClick={(event) => {\n            // setAnchorEl(event.target)\n            setActionType(\"rename\");\n            // setAction(handleMerge);\n            setOpen(true);\n          }}\n        >\n          Rename\n        </Button>\n        <Divider orientation=\"vertical\" />\n        <Button\n          onClick={(event) => {\n            // setAnchorEl(event.target)\n            setActionType(\"merge\");\n            // setAction(handleMerge);\n            setOpen(true);\n          }}\n        >\n          Merge\n        </Button>\n        <Divider orientation=\"vertical\" />\n        <Button\n          onClick={(event) => {\n            setActionType(\"split\");\n            setOpen(true);\n          }}\n        >\n          Split\n        </Button>\n        <Divider orientation=\"vertical\" />\n        <Button\n          onClick={(event) => {\n            setActionType(\"delete\");\n            setOpen(true);\n          }}\n        >\n          Delete\n        </Button>\n      </Stack>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Stack, Paper } from \"@mui/material\";\nimport { darken, lighten } from \"@material-ui/core\";\n\nimport { useSelector } from \"react-redux\";\n\nexport default function Scroller(props) {\n  const workspace = useSelector((state) => state.workspace);\n\n  const [ids, setIds] = React.useState([]);\n\n  React.useEffect(() => {\n    if (workspace.groups && workspace.groups.length == 1) {\n      setIds(...workspace.groups);\n    } else if (workspace.groups && workspace.groups.length > 1) {\n      let new_ids = [];\n      workspace.groups.forEach((group) => {\n        new_ids = new_ids.concat(group);\n      });\n      setIds(new_ids);\n    }\n  }, [workspace.groups]);\n\n  return (\n    <Stack\n      mt={\"145px\"}\n      direction=\"column\"\n      sx={{\n        ...(!props.show && { visibility: \"hidden\" }),\n        backgroundColor: \"none\",\n        height: \"84vh\",\n        width: \"10px\",\n        position: \"absolute\",\n        left: \"0vw\",\n        zIndex: 10,\n      }}\n    >\n      {ids &&\n        ids.length > 0 &&\n        ids.map((elementId) => {\n          let data = workspace.elements[elementId];\n\n          return (\n            <Paper\n              sx={{\n                backgroundColor:\n                  data.score &&\n                  data.score > 0.5 &&\n                  workspace.color_code[workspace.selectedTheme]\n                    ? `${darken(\n                        workspace.color_code[workspace.selectedTheme],\n                        (data.score - 0.5) / 0.5\n                      )}`\n                    : data.score && data.score < 0.5\n                    ? `${lighten(\"#fc0b22\", 1 - data.score)}`\n                    : \"none\",\n                height: `${(window.innerHeight - 140) / ids.length}px`,\n                width: \"15px\",\n                borderRadius: \"0px\",\n              }}\n              key={`scroller_${data.id}`}\n            />\n          );\n        })}\n\n      <Paper\n        sx={{\n          height: `${(window.innerHeight - 140) / ids.length}px`,\n          width: \"15px\",\n          backgroundColor: \"#b3bcff\",\n          borderRadius: \"0px\",\n          position: \"absolute\",\n          top: `${props.scrollPosition * (window.innerHeight - 140)}px`,\n          border: \"none\",\n          opacity: \"1\",\n        }}\n      />\n    </Stack>\n  );\n}\n","import * as React from \"react\";\nimport Popover from \"@mui/material/Popover\";\nimport { Button, Stack, Typography } from \"@mui/material\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function CustomPopover(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const workspace = useSelector((state) => state.workspace);\n\n  const { x, y } = props;\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  React.useEffect(() => {\n    if (anchorEl != null) {\n    }\n  }, [anchorEl]);\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  const phraseLabeling = (id, label) => {\n    props.handlePhraseLabeling(label);\n  };\n\n  return (\n    <Popover\n      id={id}\n      open={props.open}\n      anchorPosition={{ left: x, top: y }}\n      anchorReference={\"anchorPosition\"}\n      onClose={props.handleClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      style={{\n        borderRadius: \"10px\",\n      }}\n    >\n      {workspace.selectedTheme ? (\n        <Stack\n          sx={{\n            padding: \"5px\",\n            border: `solid 3px ${\n              workspace.color_code[workspace.selectedTheme]\n            }`,\n            backgroundColor: \"#FFFFFF11\",\n            borderRadius: \"10px\",\n          }}\n          direction={\"row\"}\n          spacing={5}\n        >\n          <Button\n            backgroundColor={workspace.color_code[workspace.selectedTheme]}\n            size={\"small\"}\n            onClick={() => phraseLabeling(\"hello\", 1)}\n            variant={\"outlined\"}\n            startIcon={<CheckCircleOutlineIcon color={\"success\"} />}\n          >\n            {\" \"}\n            {workspace.selectedTheme}\n          </Button>\n          {/* <Button\n            onClick={() => handleClose()}\n            variant={\"outlined\"}\n            color={\"info\"}\n            size={\"small\"}\n          >\n            Cancel\n          </Button> */}\n        </Stack>\n      ) : (\n        <Typography>\n          Please select theme for phrase level annotationß\n        </Typography>\n      )}\n    </Popover>\n  );\n}\n","import * as React from \"react\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteSoftmatch, explainPattern } from \"../../actions/pattern_actions\";\nimport {\n  updatePatExp,\n} from \"../../actions/Dataslice\";\nimport { CircularProgress, Divider } from \"@mui/material\";\nimport Chip from \"@mui/material/Chip\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"1px solid #cccccc\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst PatternViewComponent = (props) => {\n  return (\n    <Stack>\n      <Typography\n        variant=\"h6\"\n        component=\"h2\"\n        sx={{\n          backgroundColor: \"#FFFFFF\",\n          position: \"sticky\",\n          top: \"0px\",\n          zIndex: 10,\n        }}\n      >\n        {props.value}\n      </Typography>\n\n      <Typography variant=\"overline\">\n        {!props.is_softmatch ? <>{props.explanation[0]}</> : <>Soft Match</>}{\" \"}\n      </Typography>\n      <Divider orientation=\"horizontal\" flexItem />\n      {props.is_softmatch && (\n        <Stack spacing={2} mt={2}>\n          {props.explanation.map((softmatch_value, index) => (\n            <Chip\n              onClick={(event) => {}}\n              onDelete={() =>\n                props.handleDelete(props.value, softmatch_value, props.value)\n              }\n              key={`soft_${softmatch_value}_${index}`}\n              label={softmatch_value}\n            />\n          ))}\n        </Stack>\n      )}\n    </Stack>\n  );\n};\n\nexport default function ExplainPattern({ open, setOpen, setRow, row }) {\n  const handleDelete = (value, softmatch_value, pivot_word) => {\n    dispatch(updatePatExp({ pattern: value, soft_match: softmatch_value }));\n    // dispatch(deleteSoftmatch({ pattern: value, soft_match: softmatch_value }));\n\n    dispatch(\n      deleteSoftmatch({ pivot_word: pivot_word, similar_word: softmatch_value })\n    );\n  };\n\n  const workspace = useSelector((state) => state.workspace);\n\n  const dispatch = useDispatch();\n\n  const handleExplain = (row) => {\n    dispatch(explainPattern({ pattern: row[\"pattern\"] }));\n  };\n\n  React.useEffect(() => {\n    if (open) {\n      handleExplain(row);\n    }\n  }, [open]);\n\n  const handleClose = () => {\n    setOpen(false);\n    setRow(null);\n  };\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={open}>\n        <Box\n          sx={style}\n          style={{\n            minwidth: \"40vw\",\n            maxWidth: \"50vw\",\n            maxHeight: \"80vh\",\n            minHeight: \"40vh\",\n            overflow: \"scroll\",\n          }}\n        >\n          <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n            {row && row[\"pattern\"]}\n          </Typography>\n          <Divider />\n          <Stack\n            divider={<Divider orientation=\"vertical\" flexItem />}\n            id=\"transition-modal-description\"\n            sx={{ mt: 2 }}\n            direction=\"row\"\n            spacing={2}\n          >\n            {workspace.patternExp &&\n              Object.keys(workspace.patternExp).map((value, index) => (\n                <PatternViewComponent\n                  handleDelete={handleDelete}\n                  key={`exp_${index}_${value}`}\n                  value={value}\n                  is_softmatch={workspace.patternExp[value][0]}\n                  explanation={workspace.patternExp[value][1]}\n                />\n              ))}\n\n            {!workspace.patternExp && (\n              <CircularProgress\n                sx={{\n                  ...style,\n                  flexShrink: 0,\n                  left: 0,\n                  right: 0,\n                  margin: \"0 auto\",\n                  opacity: 0.7,\n                  backgroundColor:\n                    workspace.color_code[workspace.selectedTheme],\n                }}\n              />\n            )}\n          </Stack>\n        </Box>\n      </Fade>\n    </Modal>\n  );\n}\n","import * as React from \"react\";\nimport {\n  CloseOutlined,\n  DeleteForeverRounded,\n  PhonelinkEraseOutlined,\n} from \"@mui/icons-material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { lighten } from \"@material-ui/core\";\nimport IconButton from \"@mui/material/IconButton\";\nimport \"./index.css\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { labelPhrase } from \"../../actions/annotation_actions\";\n\nexport default function Highlight(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [patterns, setPatterns] = React.useState([]);\n  const [showDelete, setShowDelete] = React.useState(false);\n\n  const workspace = useSelector((state) => state.workspace);\n  const dispatch = useDispatch();\n\n  const getMatchingPatterns = () => {\n    let pats = [];\n    for (let index = props.start; index < props.end; index++) {\n      pats = [...pats, ...props.matchedWith[index]];\n    }\n    pats = [...new Set(pats)];\n\n    return pats;\n  };\n  const getChild = (patterns) => {\n    const pats = getMatchingPatterns();\n\n    return (\n      <>\n        {pats.map((pattern, index) => (\n          <>\n            <em key={`pat_${index}`}>{pattern}</em>:{\" \"}\n            {pattern == \"USER_DEFINED\"\n              ? `-`\n              : `${parseFloat(workspace.selectedPatterns[pattern]).toFixed(2)}`}\n            <br />\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const handlePopoverOpen = (event) => {\n    if (props.matched) {\n      setShowDelete(true);\n\n      getMatchingPatterns();\n\n      props.setPopoverAnchor(event.currentTarget);\n      props.setPopoverContent(getChild(patterns));\n\n    }\n  };\n\n  const handlePopoverClose = () => {\n    if (props.matched) {\n      setShowDelete(false);\n      props.setPopoverAnchor(null);\n      props.setPopoverContent(null);\n    }\n  };\n\n  const handleClick = () => {\n    if (props.deleteMatched) {\n      props.deleteMatched(\n        props.word,\n        0,\n        props.start,\n        props.end,\n        getMatchingPatterns()\n      );\n    }\n  };\n\n  const get_highlight_coolor = (patterns) => {\n    let sum = 0;\n    if (workspace.selectedPatterns) {\n      patterns.forEach((pattern) => {\n        sum += workspace.selectedPatterns[pattern];\n      });\n      return sum;\n    } else {\n      return null;\n    }\n  };\n\n  const open = Boolean(anchorEl);\n  return (\n    <span\n      onMouseEnter={handlePopoverOpen}\n      onMouseLeave={handlePopoverClose}\n      style={{\n        userSelect: \"text\",\n        ...(props.matched &&\n          (workspace.selectedPatterns[props.patterns[0]] > 0 ||\n            props.patterns[0] == \"USER_DEFINED\") && {\n            backgroundColor: workspace.color_code[workspace.selectedTheme]\n              ? `${lighten(workspace.color_code[workspace.selectedTheme], 0.5)}`\n              : `${lighten(\"#ececec\", 0.5)}`,\n          }),\n      }}\n      className={\n        props.matched\n          ? workspace.selectedPatterns[props.patterns[0]] < 0\n            ? \"highlight_red\"\n            : \"highlight\"\n          : \"non-highlight\"\n      }\n    >\n      {`${props.word.split(\" \").slice(0, -1).join(\" \")} `}\n      {props.matched && showDelete && (\n        <IconButton\n          style={{\n            position: \"relative\",\n            top: \"-15px\",\n            right: \"-10px\",\n            width: \"25px\",\n            height: \"25px\",\n          }}\n          size=\"small\"\n          onClick={() => {\n            handlePopoverClose();\n            handleClick(props.word, 0);\n            const phrase = `${props.word.split(\" \").slice(0, -1).join(\" \")} `;\n            if (phrase.trim() != \"\") {\n              dispatch(\n                labelPhrase({\n                  phrase: phrase,\n                  label: workspace.selectedTheme,\n                  id: props.elementId,\n                  positive: 0,\n                })\n              ).then(() => {\n                window.getSelection().empty();\n              });\n            }\n          }}\n        >\n          <CancelIcon\n            color=\"error\"\n            style={{\n              opacity: 0.3,\n              width: \"25px\",\n              height: \"25px\",\n            }}\n          />\n        </IconButton>\n      )}\n    </span>\n  );\n}\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Chip, Stack, Button, CircularProgress, Divider } from \"@mui/material\";\nimport Highlight from \"./Highlight\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { multiLabelData, \n  groupAnnotationsRemote,\n   deleteLabelData } from \"../../actions/annotation_actions\";\n\n   import { fetchRelatedExample } from \"../../actions/pattern_actions\";\nimport {\n  updateElementLabel,\n  updateNegativeElementLabel,\n  groupAnnotations,  \n  clearHighlight,\n} from \"../../actions/Dataslice\";\nimport SentenceLight from \"./sentenceLight\";\nimport { useEffect } from \"react\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { lighten } from \"@material-ui/core\";\n\nexport default function AccordionSentence(props) {\n  const dispatch = useDispatch();\n  const workspace = useSelector((state) => state.workspace);\n\n  const [matchedParts, setMatchedParts] = React.useState(null);\n  const [matchedIndex, setMatchedIndex] = React.useState(null);\n  const [sentence, setSentence] = React.useState(null);\n  const [expandMore, setExpandMore] = React.useState(false);\n\n  const [hidePrediction, setHidePrediction] = React.useState(false);\n  const [showAcceptorReject, setShowAcceptorReject] = React.useState(true);\n\n  const [labeled, setLabeled] = React.useState(\n    workspace.userLabel[props.elementId]\n  );\n  const [loading, setLoading] = React.useState(false);\n  const [activateSelection, setActivateSelection] = React.useState(false);\n\n  React.useEffect(() => {\n    setSentence(props.example);\n  }, []);\n\n  React.useEffect(() => {\n    setHidePrediction(false);\n    setShowAcceptorReject(true);\n  }, [props.score]);\n\n  // useEffect(() => {\n  //   if (workspace.binary_mode) {\n  //     setShowAcceptorReject(false);\n  //   }\n  // }, [workspace.binary_mode]);\n  useEffect(() => {\n    if (props.score > 0.5 || true) {\n      setMatchedParts(getMatchedParts(props.elementId, props.example));\n    } else {\n      let parts = {};\n      parts[`${props.example}`] = [false, 0, -1, []];\n      setMatchedParts(parts);\n    }\n  }, [props.score, workspace.explanation]);\n\n  const handleShowMore = () => {\n    if (expandMore) {\n      setExpandMore(false);\n      props.retrain();\n    } else {\n      setExpandMore(true);\n      setLoading(true);\n\n      dispatch(fetchRelatedExample({ id: props.elementId })).then(() => {\n        setLoading(false);\n      });\n    }\n  };\n\n  const handleBatchLabel = (element_id, label) => {\n    props.setPositiveIds({ element_id, label });\n  };\n\n  const getMatchedParts = (id, sentence) => {\n    const explanations = workspace.explanation;\n    let user_defined = explanations[\"USER_DEFINED\"];\n    let sentence_array = sentence.split(\" \");\n    let matchedParts = {};\n    sentence_array.forEach((element, index) => {\n      matchedParts[index] = [];\n    });\n\n    for (let [key, value] of Object.entries(explanations)) {\n      const exp = value && value[id];\n      if (key == \"USER_DEFINED\" && exp) {\n        value[id].forEach((explanation) => {\n          const start = explanation[1];\n          const end = explanation[2];\n\n          for (let i = start; i < end; i++) {\n            try {\n              matchedParts[i] = [...matchedParts[i], key];\n            } catch (error) {\n            }\n          }\n        });\n      } else if (exp && exp != \"\") {\n        const start = value[id][0][1];\n        const end = value[id][0][2];\n\n        for (let i = start; i < end; i++) {\n          try {\n            matchedParts[i] = [...matchedParts[i], key];\n          } catch (error) {\n          }\n        }\n      }\n    }\n    setMatchedIndex(matchedParts);\n\n    let highlighted = {};\n\n    let substr = \"\";\n    let current = null;\n    let start_index_counter = 0;\n    let end_index_counter = 0;\n    let previous_patterns = [];\n    let current_patterns = [];\n\n    for (let [key, value] of Object.entries(matchedParts)) {\n      let matched = value.length > 0;\n      if (current == null) {\n        current = matched;\n        substr += \" \" + sentence_array[key];\n        previous_patterns = value;\n\n        current_patterns = [...value];\n      } else {\n        if (current != matched) {\n          highlighted[`${substr} ${key}`] = [\n            current,\n            start_index_counter,\n            end_index_counter,\n            current_patterns,\n          ];\n\n          start_index_counter = end_index_counter;\n\n          current = matched;\n          substr = sentence_array[key];\n\n          current_patterns = [...value];\n        } else {\n          const filteredArray = previous_patterns.filter((value2) =>\n            value.includes(value2)\n          );\n          if (filteredArray.length) {\n            substr += \" \" + sentence_array[key];\n            current_patterns = [...new Set([...current_patterns, ...value])];\n          } else {\n            highlighted[`${substr} ${key}`] = [\n              current,\n              start_index_counter,\n              end_index_counter,\n              current_patterns,\n            ];\n\n            start_index_counter = end_index_counter;\n\n            current = matched;\n            current_patterns = [...value];\n            substr = sentence_array[key];\n          }\n        }\n\n        if (sentence_array.length - 1 == key) {\n          highlighted[`${substr} ${key}`] = [\n            current,\n            start_index_counter,\n            end_index_counter,\n            current_patterns,\n          ];\n        }\n      }\n\n      end_index_counter += 1;\n      previous_patterns = value;\n    }\n\n    return highlighted;\n  };\n\n  const handleGroupLabeling = (label, groupIndex, positive, elementId) => {\n    let ids = workspace.groups[groupIndex].filter((id) => id != elementId);\n\n    dispatch(groupAnnotations({ ids: ids, label: label, positive: positive }));\n    dispatch(\n      groupAnnotationsRemote({ ids: ids, label: label, positive: positive })\n    ).then((response) => {\n      props.retrain();\n    });\n  };\n\n  const getSentenceParts = (sentence_list, start, end) => {\n    let sentence = [];\n    if (start > 0) {\n      sentence.push([sentence_list.slice(0, start).join(\" \"), 0]);\n    }\n    sentence.push([sentence_list.slice(start, end).join(\" \"), 1]);\n    if (end < sentence_list.length - 1) {\n      sentence.push([\n        sentence_list.slice(end, sentence_list.length).join(\" \"),\n        0,\n      ]);\n    }\n\n    return sentence;\n  };\n\n  const clear_highlight = (key, label, start, end, patterns) => {\n    let matched = { ...matchedParts };\n    matched[key][0] = false;\n    setMatchedParts(matched);\n\n    dispatch(\n      clearHighlight({\n        key,\n        label,\n        start,\n        end,\n        patterns,\n        elementId: props.elementId,\n      })\n    );\n  };\n\n  const handleAddLabel = (event, label) => {\n    props.setAnchorEl(event.currentTarget);\n    // setSentenceLabels([...sentenceLabels,\"Hello\"])\n  };\n\n  const handelDeleteLabel = (elementId, label) => {\n    dispatch(updateElementLabel({ elementId, label, event: \"REMOVE\" }));\n    dispatch(deleteLabelData({ elementId, label }));\n  };\n\n  const handleAcceptOrReject = (elementId, score, accept) => {\n    setShowAcceptorReject(false);\n    if (accept == 1) {\n\n      if (score > 0.5) {\n        dispatch(\n          updateElementLabel({\n            elementId: elementId,\n            label: workspace.selectedTheme,\n            event: \"ADD\",\n          })\n        );\n        dispatch(\n          multiLabelData({\n            elementId: elementId,\n            label: workspace.selectedTheme,\n            positive: 1,\n          })\n        );\n      } else if (score < 0.5) {\n        dispatch(\n          updateNegativeElementLabel({\n            elementId: elementId,\n            theme: workspace.selectedTheme,\n            label: 0,\n          })\n        );\n\n        dispatch(\n          multiLabelData({\n            elementId: elementId,\n            label: workspace.selectedTheme,\n            positive: 0,\n          })\n        );\n      }\n    } else if (accept == 0) {\n      setHidePrediction(true);\n\n      if (score > 0.5) {\n        dispatch(\n          updateNegativeElementLabel({\n            elementId: elementId,\n            theme: workspace.selectedTheme,\n            label: 0,\n          })\n        );\n\n        dispatch(\n          multiLabelData({\n            elementId: elementId,\n            label: workspace.selectedTheme,\n            positive: 0,\n          })\n        );\n      } else if (score < 0.5) {\n        dispatch(\n          updateElementLabel({\n            elementId: elementId,\n            label: workspace.selectedTheme,\n            event: \"ADD\",\n          })\n        );\n\n        dispatch(\n          multiLabelData({\n            elementId: elementId,\n            label: workspace.selectedTheme,\n            positive: 1,\n          })\n        );\n      }\n    }\n  };\n  const findIt = (label) => {\n    return label == workspace.selectedTheme;\n  };\n\n  return (\n    <Stack\n      elevation={1}\n      onClick={() => {\n        props.setFocusedId(props.elementId);\n      }}\n      sx={{\n        marginLeft: 0,\n        padding: 2,\n        backgroundColor: \"#FFFFFF\",\n        border: \"solid 3px #ececec\",\n        zIndex: 1,\n        ...(expandMore && { position: \"sticky\", top: 0 }),\n      }}\n    >\n      <Stack direction=\"column\">\n        <Stack direction=\"row\">\n          <Stack spacing={1} direction={\"column\"}>\n            {props.score != null && props.score != 0.5 && !hidePrediction && (\n              <Stack\n                style={{\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  color:\n                    props.score < 0.5\n                      ? \"crimson\"\n                      : workspace.color_code[workspace.selectedTheme],\n                  border:\n                    props.score < 0.5\n                      ? \"1px solid crimson\"\n                      : `1px solid ${\n                          workspace.color_code[workspace.selectedTheme]\n                        }`,\n                  borderRadius: 13.125,\n                  padding: 5,\n                  marginRight: 5,\n                  marginBottom: 5,\n                }}\n                color={props.score > 0.5 ? \"success\" : \"error\"}\n              >\n                <Typography\n                  style={{\n                    maxWidth: \"100px\",\n                    flexWrap: \"wrap\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {props.score > 0.5\n                    ? `Predicted  ${props.theme}`\n                    : `Predicted not ${props.theme}`}\n                </Typography>\n                {!(\n                  workspace.element_to_label[props.elementId] &&\n                  workspace.element_to_label[props.elementId].indexOf(\n                    workspace.selectedTheme\n                  ) != -1\n                ) &&\n                  showAcceptorReject &&\n                  !workspace.binary_mode && (\n                    <Stack\n                      direction={\"row\"}\n                      justifyContent=\"space-evenly\"\n                      alignItems=\"center\"\n                      spacing={0}\n                      maxWidth={\"fit-content\"}\n                    >\n                      <Button\n                        onClick={() => {\n                          handleAcceptOrReject(props.elementId, props.score, 1);\n                        }}\n                        color=\"info\"\n                        size=\"small\"\n                        style={{\n                          border: \"1px solid\",\n                          borderLeft: \"none\",\n                          borderRadius: \"20px 0px 0px 20px\",\n                          fontSize: \"12px\",\n                        }}\n                      >\n                        Accept\n                      </Button>\n                      <Button\n                        onClick={() => {\n                          handleAcceptOrReject(props.elementId, props.score, 0);\n                        }}\n                        size=\"small\"\n                        style={{\n                          border: \"1px solid\",\n                          borderLeft: \"none\",\n                          borderRadius: \"0px 20px 20px 0px\",\n                          fontSize: \"12px\",\n                        }}\n                        color=\"info\"\n                      >\n                        Reject\n                      </Button>\n                    </Stack>\n                  )}\n              </Stack>\n            )}\n          </Stack>\n\n          <Typography\n            sx={{ fontSize: 16, fontWeight: 500 }}\n            color=\"text.secondary\"\n            align=\"left\"\n            variant=\"body2\"\n            display=\"block\"\n            gutterBottom\n            onMouseUp={(event) => props.getSelection(event)}\n          >\n            <Stack\n              direction={\"row\"}\n              spacing={1}\n              maxWidth={\"100%\"}\n              overdflowY={\"visible\"}\n              overflowX={\"hidden\"}\n              sx={{ flexWrap: \"wrap\" }}\n            >\n              <Typography\n                sx={{\n                  fontSize: 16,\n                  fontWeight: 500,\n                }}\n                color=\"text.secondary\"\n                align=\"left\"\n                variant=\"body2\"\n                display=\"block\"\n                gutterBottom\n              >\n                <Stack\n                  direction={\"row\"}\n                  spacing={1}\n                  maxWidth={\"100%\"}\n                  sx={{ flexWrap: \"wrap\", zIndex: 10, userSelect: \"text\" }}\n                >\n                  {matchedParts &&\n                    Object.keys(matchedParts).map((key, index) => (\n                      <Highlight\n                        elementId={props.elementId}\n                        key={`sent_${props.elementId}_${index}`}\n                        score={props.score}\n                        word={key}\n                        matched={matchedParts[key][0]}\n                        deleteMatched={clear_highlight}\n                        start={matchedParts[key][1]}\n                        end={matchedParts[key][2]}\n                        patterns={matchedParts[key][3]}\n                        matchedWith={matchedIndex}\n                        setPopoverAnchor={props.setPopoverAnchor}\n                        setPopoverContent={props.setPopoverContent}\n                      />\n                    ))}\n\n                  {!matchedParts && <Highlight word={props.example} />}\n                  {/* {props.element.example} */}\n                </Stack>\n              </Typography>\n            </Stack>\n          </Typography>\n        </Stack>\n      </Stack>\n\n      <div>\n        <Stack\n          direction={\"row\"}\n          spacing={2}\n          style={{ flexWrap: \"wrap\", rowGap: \"10px\" }}\n        >\n          {workspace.element_to_label[props.elementId] &&\n            [...new Set(workspace.element_to_label[props.elementId])].map(\n              (label) => (\n                <Chip\n                  key={`${props.elementId}_${label}`}\n                  label={label}\n                  color={\"primary\"}\n                  sx={{ backgroundColor: workspace.color_code[label] }}\n                  size=\"small\"\n                  onDelete={() => handelDeleteLabel(props.elementId, label)}\n                />\n              )\n            )}\n          {workspace.negative_element_to_label[props.elementId] &&\n            [\n              ...new Set(workspace.negative_element_to_label[props.elementId]),\n            ].map((negative_label) => (\n              <Chip\n                key={`${props.elementId}_neg_${negative_label}`}\n                label={`Not ${negative_label}`}\n                color={\"primary\"}\n                sx={{ backgroundColor: workspace.not_color }}\n                style={{\n                  border: `5px solid ${workspace.color_code[negative_label]}`,\n                }}\n                size=\"small\"\n              />\n            ))}\n\n          {workspace.binary_mode ? (\n            <Stack\n              direction=\"row\"\n              spacing={1}\n              ml={5}\n              style={{\n                border: `1px solid ${\n                  workspace.color_code[workspace.selectedTheme]\n                }`,\n                padding: \"5px\",\n                borderRadius: \"2px\",\n              }}\n            >\n              <Typography variant=\"subtitle1\">\n                {`${workspace.selectedTheme}?`}\n              </Typography>\n              <Button\n                variant={\"outlined\"}\n                size={\"small\"}\n                backgroundColor={workspace.color_code[workspace.selectedTheme]}\n                disabled={\n                  workspace.element_to_label[props.elementId] &&\n                  workspace.element_to_label[props.elementId].findIndex(\n                    findIt\n                  ) != -1\n                }\n                onClick={() => {\n                  dispatch(\n                    updateNegativeElementLabel({\n                      elementId: props.elementId,\n                      theme: workspace.selectedTheme,\n                      label: 1,\n                    })\n                  );\n                  dispatch(\n                    multiLabelData({\n                      elementId: props.elementId,\n                      label: workspace.selectedTheme,\n                      positive: 1,\n                    })\n                  );\n                }}\n              >\n                Yes\n              </Button>\n\n              <Button\n                disabled={\n                  workspace.negative_element_to_label[props.elementId] &&\n                  workspace.negative_element_to_label[\n                    props.elementId\n                  ].findIndex(findIt) != -1\n                }\n                onClick={() => {\n                  dispatch(\n                    updateNegativeElementLabel({\n                      elementId: props.elementId,\n                      theme: workspace.selectedTheme,\n                      label: 0,\n                    })\n                  );\n                  dispatch(\n                    multiLabelData({\n                      elementId: props.elementId,\n                      label: workspace.selectedTheme,\n                      positive: 0,\n                    })\n                  );\n                }}\n                variant={\"outlined\"}\n                size={\"small\"}\n                color={\"error\"}\n              >\n                No\n              </Button>\n            </Stack>\n          ) : (\n            <Chip\n              icon={<AddIcon />}\n              label=\"Add Label\"\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={(event) => handleAddLabel(event, props.elementId)}\n            />\n          )}\n\n          {props.score > 0.5 && (\n            <Button onClick={() => handleShowMore()}>\n              {expandMore ? \"Done\" : \"See Similar\"}\n            </Button>\n          )}\n        </Stack>\n\n        {expandMore && (\n          <Stack\n            direction={\"column\"}\n            maxHeight={\"50vw\"}\n            overflow={\"auto\"}\n            style={{\n              border: \"solid 3px #ececec\",\n              borderTop: \"0px\",\n              zIndex: 1111,\n              backgroundColor: \"#FFFFFF\",\n            }}\n          >\n            <Divider />\n\n            {loading && (\n              <CircularProgress\n                sx={{ position: \"fixed\", top: \"30%\", left: \"300px\" }}\n              ></CircularProgress>\n            )}\n\n            {!loading &&\n              workspace.relatedExamples.map((element) => (\n                <SentenceLight\n                  color={\n                    workspace.color_code[workspace.selectedTheme]\n                      ? lighten(\n                          workspace.color_code[workspace.selectedTheme],\n                          0.5\n                        )\n                      : `${lighten(\"#ececec\", 0.5)}`\n                  }\n                  show={true}\n                  highlight={workspace.relatedExplanation[element.id]}\n                  element={element}\n                  handleBatchLabel={handleBatchLabel}\n                  sentence={element.example}\n                  key={`lightsent_${element.id}`}\n                />\n              ))}\n          </Stack>\n        )}\n      </div>\n    </Stack>\n  );\n}\n","import * as React from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { multiLabelData, groupAnnotationsRemote } from \"../../actions/annotation_actions\";\nimport {\n  updateElementLabel,\n  updateNegativeElementLabel,\n  addTheme,\n  groupAnnotations,\n} from \"../../actions/Dataslice\";\nimport { setTheme, addThemeRemote } from \"../../actions/theme_actions\";\nimport { Chip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Button from \"@mui/material/Button\";\n\nimport TextField from \"@mui/material/TextField\";\nimport { Box } from \"@material-ui/core\";\n\nexport default function LabelSelector({\n  anchorEl,\n  setAnchorEl,\n  elementId,\n  merge,\n  groupLabeling,\n  setBatchLabeling,\n}) {\n  const workspace = useSelector((state) => state.workspace);\n\n  const [addNewTheme, setAddNewTheme] = React.useState(false);\n\n  const dispatch = useDispatch();\n\n\n  const open = Boolean(anchorEl);\n\n  const handleAddNewTheme = (event) => {\n    if (event.key === \"Enter\" && event.target.value.trim() != \"\") {\n      //dispatch add new theme\n      dispatch(\n        addTheme({ theme: event.target.value, index: workspace.themes.length })\n      );\n      dispatch(addThemeRemote({ theme: event.target.value }));\n      if (workspace.selectedTheme == null) {\n        dispatch(setTheme({ theme: event.target.value }));\n      }\n\n      //Add element label\n      handleAddLabel(event.target.value);\n      setAddNewTheme(false);\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setBatchLabeling(null);\n  };\n  const handleAddLabel = (label) => {\n    setAnchorEl(null);\n    if (groupLabeling) {\n      let ids = groupLabeling.filter((id) => id != elementId);\n      setBatchLabeling(null);\n\n      dispatch(groupAnnotations({ ids: ids, label: label, positive: 1 }));\n      dispatch(\n        groupAnnotationsRemote({ ids: ids, label: label, positive: 1 })\n      ).then((response) => {\n        // props.retrain();\n      });\n    } else {\n      // workspace.element_to_label[elementId]= [label]\n      dispatch(updateElementLabel({ elementId, label, event: \"ADD\" }));\n      dispatch(multiLabelData({ elementId, label }));\n    }\n  };\n\n  const handleAddBinaryLabel = (elementId, theme, label) => {\n    setAnchorEl(null);\n    if (groupLabeling) {\n      let ids = groupLabeling.filter((id) => id != elementId);\n      setBatchLabeling(null);\n\n      dispatch(groupAnnotations({ ids: ids, label: theme, positive: label }));\n      dispatch(\n        groupAnnotationsRemote({ ids: ids, label: theme, positive: label })\n      ).then((response) => {\n        // props.retrain();\n      });\n    } else {\n      dispatch(updateNegativeElementLabel({ elementId, theme, label }));\n      dispatch(multiLabelData({ elementId, label: theme, positive: label }));\n    }\n  };\n\n  const findIt = (label) => {\n    return label == workspace.selectedTheme;\n  };\n  return !workspace.binary_mode ? (\n    <Menu\n      id=\"long-menu\"\n      MenuListProps={{\n        \"aria-labelledby\": \"long-button\",\n      }}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={handleClose}\n      PaperProps={{\n        style: {\n          // width: \"20ch\",\n        },\n      }}\n    >\n      {workspace.themes.map((theme) => (\n        <MenuItem\n          // sx={{ textTransform: \"capitalize\" }}\n          key={theme}\n          disabled={false}\n          onClick={() => handleAddLabel(theme)}\n        >\n          <Chip\n            key={`menuitem_${theme}_light`}\n            label={\"\"}\n            color={\"primary\"}\n            sx={{\n              backgroundColor: workspace.color_code[theme],\n              width: 20,\n              height: 20,\n              marginRight: 1,\n            }}\n            size=\"small\"\n          />{\" \"}\n          {theme}\n        </MenuItem>\n      ))}\n      <MenuItem\n        size=\"small\"\n        onKeyDown={(e) => e.stopPropagation()}\n        onClickCapture={(e) => {\n          e.stopPropagation();\n          if (!addNewTheme) setAddNewTheme(!addNewTheme);\n        }}\n        // sx={{ textTransform: \"capitalize\" }}\n        value={\"add_new_theme\"}\n        key={`theme_add_new`}\n      >\n        {addNewTheme ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-end\",\n              width: \"100%\",\n            }}\n          >\n            <Chip\n              key={`menuitem_new_theme_light${workspace.themes.length}`}\n              label={\"\"}\n              color={\"primary\"}\n              sx={{\n                backgroundColor:\n                  workspace.color_schema[workspace.themes.length],\n                width: 20,\n                height: 20,\n                marginRight: 1,\n                mr: 1,\n                my: 0.5,\n              }}\n              size=\"small\"\n            />\n            <TextField\n              inputRef={(input) => input && input.focus()}\n              size=\"small\"\n              onKeyDown={handleAddNewTheme}\n              id=\"input-with-sx\"\n              label=\"New Theme\"\n              variant=\"standard\"\n              onChange={(event) => {\n                event.target.value = event.target.value.toLowerCase();\n              }}\n              placeholder={\"Theme\"}\n              multiline\n              rowsMax=\"3\"\n              fullWidth={true}\n            />\n          </Box>\n        ) : (\n          <Button variant=\"outlined\" startIcon={<AddIcon />}>\n            Add Theme\n          </Button>\n        )}\n      </MenuItem>\n    </Menu>\n  ) : (\n    <Menu\n      id=\"long-menu\"\n      MenuListProps={{\n        \"aria-labelledby\": \"long-button\",\n      }}\n      anchorEl={anchorEl}\n      open={open}\n      onClose={handleClose}\n      PaperProps={{\n        style: {\n          width: \"20ch\",\n        },\n      }}\n    >\n      <MenuItem\n        // sx={{ textTransform: \"capitalize\" }}\n        disabled={\n          workspace.element_to_label[elementId] &&\n          workspace.element_to_label[elementId].findIndex(findIt) != -1\n        }\n        onClick={() =>\n          handleAddBinaryLabel(elementId, workspace.selectedTheme, 1)\n        }\n      >\n        <Chip\n          label={\"\"}\n          color={\"primary\"}\n          sx={{\n            backgroundColor: workspace.color_code[workspace.selectedTheme],\n            width: 20,\n            height: 20,\n            marginRight: 1,\n          }}\n          size=\"small\"\n        />{\" \"}\n        {workspace.selectedTheme}\n      </MenuItem>\n\n      <MenuItem\n        // sx={{ textTransform: \"capitalize\" }}\n        disabled={\n          workspace.negative_element_to_label[elementId] &&\n          workspace.negative_element_to_label[elementId].findIndex(findIt) != -1\n        }\n        onClick={() =>\n          handleAddBinaryLabel(elementId, workspace.selectedTheme, 0)\n        }\n      >\n        <Chip\n          label={\"\"}\n          color={\"primary\"}\n          sx={{\n            backgroundColor: workspace.not_color,\n            width: 20,\n            height: 20,\n            marginRight: 1,\n          }}\n          size=\"small\"\n        />{\" \"}\n        not {workspace.selectedTheme}\n      </MenuItem>\n    </Menu>\n  );\n}\n","import { Box, Typography } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AccordionSentence from \"../../sharedComponents/Sentence/sentence\";\nimport { multiLabelData } from \"../../actions/annotation_actions\";\nimport {\n  changeSetting,\n  updateNegativeElementLabel,\n} from \"../../actions/Dataslice\";\nimport { fetchCombinedPatterns, fetchPatterns } from \"../../actions/pattern_actions\";\nimport { Chip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { lighten } from \"@material-ui/core\";\n\nimport Fab from \"@mui/material/Fab\";\nimport LabelSelector from \"../../sharedComponents/LabelSelector/labelselector\";\n\nimport SentenceLight from \"../../sharedComponents/Sentence/sentenceLight\";\nimport { Stack } from \"@mui/material\";\n\nexport default function SentenceViewer({\n  getSelection,\n  hovering,\n  setHovering,\n  setScrollPosition,\n  setOpenSideBar,\n  focusedId,\n  setFocusedId,\n  setPopoverAnchor,\n  setPopoverContent,\n  setActiveSentenceGroup,\n}) {\n  const workspace = useSelector((state) => state.workspace);\n\n  const dispatch = useDispatch();\n\n  const [positiveIds, setPositiveIds] = React.useState({});\n\n  const [labelSelectorAnchor, setLabelSelectorAnchor] = React.useState(null);\n  const [batchLabeling, setBatchLabeling] = React.useState(null);\n\n  React.useEffect(() => {\n    if (workspace.loadingCombinedPatterns || workspace.loadingPatterns) {\n      setHovering(null);\n    }\n  }, [workspace.loadingCombinedPatterns, workspace.loadingPatterns]);\n\n  const handleBatchLabeling = () => {\n    // setPositiveIds({});\n    setHovering(null);\n\n    for (const [key, value] of Object.entries(positiveIds)) {\n      dispatch(\n        multiLabelData({\n          elementId: key,\n          label: workspace.selectedTheme,\n          positive: value,\n        })\n      );\n\n      if (value == 1) {\n        dispatch(\n          updateNegativeElementLabel({\n            elementId: key,\n            theme: workspace.selectedTheme,\n            label: 1,\n          })\n        );\n      } else if (value == 0) {\n        dispatch(\n          updateNegativeElementLabel({\n            elementId: key,\n            theme: workspace.selectedTheme,\n            label: 0,\n          })\n        );\n      }\n    }\n\n    if (Object.keys(positiveIds).length > 0) {\n      dispatch(fetchPatterns()).then((response) => {\n        const data = response.payload;\n        if (data[\"status_code\"] != 300) {\n          dispatch(changeSetting({ selectedSetting: 0 }));\n          dispatch(fetchCombinedPatterns());\n        }\n      });\n      setPositiveIds({});\n    }\n  };\n\n  const handleAddToPos = (elem) => {\n    let ps = { ...positiveIds };\n    ps[elem.element_id] = elem.label;\n    setPositiveIds(ps);\n  };\n  return (\n    <Box\n      style={{\n        maxHeight: \"100%\",\n        maxWidth: \"50vw\",\n        minWidth: \"50vw\",\n        overflow: \"auto\",\n        marginLeft: \"10px\",\n      }}\n      onScroll={(event) => {\n        setScrollPosition(event.target.scrollTop / event.target.scrollHeight);\n      }}\n    >\n      <LabelSelector\n        anchorEl={labelSelectorAnchor}\n        setAnchorEl={setLabelSelectorAnchor}\n        elementId={focusedId}\n        groupLabeling={batchLabeling}\n        setBatchLabeling={setBatchLabeling}\n      />\n\n      {!hovering &&\n        workspace.groups.map((groups, groupIndex) => (\n          <Stack\n            mb={5}\n            sx={{\n              ...(workspace.groups.length > 1 && {\n                border: \"solid 8px #4f4a50\",\n                borderRadius: \"10px\",\n              }),\n            }}\n          >\n            {workspace.groups.length > 1 && !workspace.binary_mode && (\n              <Stack\n                direction={\"row\"}\n                spacing={2}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                {workspace.groupNames && (\n                  <Typography variant=\"h6\">\n                    {workspace.groupNames[groupIndex]}\n                  </Typography>\n                )}\n                <Chip\n                  icon={<AddIcon />}\n                  label=\"Add Group Label\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={(event) => {\n                    setBatchLabeling(workspace.groups[groupIndex]);\n                    setLabelSelectorAnchor(event.target);\n                  }}\n                />\n                {/* <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  sx={{\n                    maxWidth: \"100px\",\n                    backgroundColor: \"#cececece\",\n                    border: \"solid 8px #4f4a50\",\n                  }}\n                  onClick={(event) => {\n                    setBatchLabeling(workspace.groups[groupIndex]);\n                    setLabelSelectorAnchor(event.target);\n                  }}\n                >\n                  Label Group\n                </Button> */}\n              </Stack>\n            )}\n            {groups.map((elementId, index) => (\n              <AccordionSentence\n                groupIndex={groupIndex}\n                marginLeft={10}\n                seeMore={setOpenSideBar}\n                index={index}\n                positiveIds={positiveIds}\n                setPositiveIds={handleAddToPos}\n                explanation={\n                  hovering && workspace.explanation\n                    ? workspace.explanation[hovering][elementId]\n                    : null\n                }\n                hovering={hovering}\n                score={workspace.elements[elementId].score}\n                key={`sent_grouped_${elementId}`}\n                elementId={elementId}\n                example={workspace.elements[elementId].example}\n                focused={focusedId == elementId}\n                setFocusedId={setFocusedId}\n                theme={workspace.selectedTheme}\n                annotationPerRetrain={workspace.annotationPerRetrain}\n                getSelection={getSelection}\n                retrain={handleBatchLabeling}\n                setPopoverAnchor={setPopoverAnchor}\n                setPopoverContent={setPopoverContent}\n                setAnchorEl={setLabelSelectorAnchor}\n              />\n            ))}\n          </Stack>\n        ))}\n\n      {hovering &&\n        workspace.explanation &&\n        workspace.groups &&\n        workspace.groups.map((groups, groupIndex) => (\n          <Stack\n            mb={10}\n            sx={{ backgroundColor: \"#cececece\", border: \"solid 3px #cececece\" }}\n          >\n            {groups.map((elementId, index) => (\n              <SentenceLight\n                show={\n                  workspace.explanation[hovering] &&\n                  workspace.explanation[hovering][elementId]\n                }\n                highlight={\n                  workspace.explanation[hovering] &&\n                  workspace.explanation[hovering][elementId]\n                }\n                color={\n                  workspace.color_code[workspace.selectedTheme]\n                    ? lighten(\n                        workspace.color_code[workspace.selectedTheme],\n                        0.5\n                      )\n                    : \"none\"\n                }\n                element={workspace.elements[elementId]}\n                handleBatchLabel={(element_id, label) =>\n                  handleAddToPos({ element_id, label })\n                }\n                highlightAsList={true}\n                sentence={workspace.elements[elementId].example}\n                key={`lightsent_hovering_${elementId}`}\n              />\n            ))}\n          </Stack>\n        ))}\n\n      {hovering && Object.keys(positiveIds).length > 0 && (\n        <Fab\n          sx={{ position: \"sticky\", bottom: \"50px\", marginLeft: \"20px\" }}\n          color={\"primary\"}\n          variant=\"extended\"\n          onClick={handleBatchLabeling}\n        >\n          Done\n        </Fab>\n      )}\n    </Box>\n  );\n}\n","import { Box, Divider } from \"@material-ui/core\";\nimport { Stack } from \"@mui/material\";\nimport * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TabelView from \"../../sharedComponents/TableView\";\nimport Header from \"../HeaderComponent\";\nimport Summary from \"../../sharedComponents/Summary\";\n\nimport { fetchDataset, createSession } from \"../../actions/dataset_actions\";\nimport { labelPhrase } from \"../../actions/annotation_actions\";\nimport { fetchSelectedTheme, fetchThemes, setTheme } from \"../../actions/theme_actions\";\nimport {\n  changeSetting,\n  getCache,\n  abortApiCall,\n} from \"../../actions/Dataslice\";\nimport { fetchCombinedPatterns, fetchPatterns } from \"../../actions/pattern_actions\";\nimport Scroller from \"../MarkedScrollbar\";\n\nimport CustomPopover from \"../../sharedComponents/CustomPopover\";\nimport Popover from \"@mui/material/Popover\";\nimport ExplainPattern from \"../../sharedComponents/TableView/explain_pattern\";\nimport CustomLoading from \"../../sharedComponents/Loading/Loading\";\nimport SentenceViewer from \"./SentenceViewer\";\n\nfunction Workspace() {\n  //States\n  const [focusedId, setFocusedId] = React.useState(0);\n  const [labelCounter, setLabelCounter] = React.useState(0);\n  const [hovering, setHovering] = React.useState(null);\n  const [scrollPosition, setScrollPosition] = React.useState(0);\n  const [openSideBar, setOpenSideBar] = React.useState(false);\n\n  const [activeSentenceGroup, setActiveSentenceGroup] = React.useState(0);\n\n  const [labelSelectorAnchor, setLabelSelectorAnchor] = React.useState(null);\n\n \n\n  const workspace = useSelector((state) => state.workspace);\n\n  const dispatch = useDispatch();\n\n  // React.useEffect(() => {\n  //   retrain();\n  // }, []);\n\n  //Context menu\n  const [anchorPoint, setAnchorPoint] = React.useState(null);\n  const [x, setX] = React.useState(0);\n  const [y, setY] = React.useState(0);\n  const [showContextMenu, setShowContextMenu] = React.useState(false);\n  const [popoverAnchor, setPopoverAnchor] = React.useState(null);\n  const [popoverContent, setPopoverContent] = React.useState(null);\n  const [openModal, setOpenModal] = React.useState(false);\n  const [patternRow, setPatternRow] = React.useState(null);\n\n  const getSelection = (event) => {\n    let selected = window.getSelection().toString();\n\n    if (selected.length == 0) {\n      return;\n    }\n    event.preventDefault();\n\n    setAnchorPoint(event.currentTarget);\n    setX(event.clientX);\n    setY(event.clientY);\n    setShowContextMenu(true);\n  };\n  React.useEffect(() => {\n    if (workspace.cacheHit == false) {\n      if (workspace.loadingPatterns || workspace.loadingCombinedPatterns) {\n        dispatch(abortApiCall());\n      }\n      retrain();\n    }\n  }, [workspace.cacheHit]);\n\n  const retrain = () => {\n    if (labelCounter > 0 || true) {\n      setLabelCounter(0);\n      dispatch(fetchPatterns()).then((response) => {\n        const data = response.payload;\n\n        if (!data || data[\"status_code\"] != 300) {\n          dispatch(fetchCombinedPatterns());\n        }\n      });\n    }\n  };\n\n  const clear_session = () => {\n    setLabelCounter(0);\n    setHovering(null);\n    // setPositiveIds({});\n    // setScrollPosition(0)\n  };\n\n  const handleChangeTheme = (value) => {\n    clear_session();\n    dispatch(setTheme({ theme: value })).then(() => {\n      if (workspace.userAnnotationCount > 0 && workspace.refresh) retrain();\n      else {\n        dispatch(getCache());\n      }\n    });\n    clear_session();\n  };\n\n  //Effects\n  React.useEffect(() => {\n    dispatch(createSession({ user: \"user\" })).then((response) => {\n      window.localStorage.setItem(\"user\", \"user\")\n      dispatch(fetchDataset());\n      dispatch(fetchThemes());\n      dispatch(fetchSelectedTheme());\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (\n      workspace.userAnnotationCount > 0 &&\n      workspace.userAnnotationTracker >= workspace.annotationPerRetrain\n    ) {\n      dispatch(fetchPatterns()).then((response) => {\n        const data = response.payload;\n        if (!data || data[\"status_code\"] != 300) {\n          dispatch(changeSetting({ selectedSetting: 0 }));\n          dispatch(fetchCombinedPatterns());\n        }\n      });\n    }\n  }, [workspace.userAnnotationTracker]);\n\n  const filterHovering = (hovering) => {\n    let filteredDataset = [];\n    const exp = workspace.explanation[hovering];\n  };\n\n  const handleOpenModal = (row) => {\n    setPatternRow(row);\n    setOpenModal(true);\n  };\n\n  return (\n    <Stack direction={\"column\"} sx={{ height: \"100vh\" }}>\n      <CustomLoading />\n      <Header\n        binary_mode={workspace.binary_mode}\n        setTheme={handleChangeTheme}\n        color_code={workspace.color_code}\n        selectedTheme={workspace.selectedTheme}\n        themes={workspace.themes}\n        retrain={retrain}\n        annotationPerRetrain={workspace.annotationPerRetrain}\n        userAnnotationTracker={workspace.userAnnotationTracker}\n        modelAnnotationCount={workspace.modelAnnotationCount}\n        totalDataset={workspace.totalDataset}\n        userAnnotationCount={workspace.userAnnotationCount}\n      />\n      <Scroller\n        color={workspace.color_code[workspace.selectedTheme]}\n        dataset={workspace.dataset}\n        scrollPosition={scrollPosition}\n        show={!hovering}\n      />\n      <Stack\n        direction={\"row\"}\n        sx={{ height: \"84vh\" }}\n        mt={\"145px\"}\n        ml={1}\n        spacing={2}\n        divider={<Divider orientation=\"vertical\" />}\n      >\n        <SentenceViewer\n          hovering={hovering}\n          setHovering={setHovering}\n          setScrollPosition={setScrollPosition}\n          setOpenSideBar={setOpenSideBar}\n          focusedId={focusedId}\n          setFocusedId={setFocusedId}\n          setPopoverAnchor={setPopoverAnchor}\n          setPopoverContent={setPopoverContent}\n          setLabelSelectorAnchor={setLabelSelectorAnchor}\n          getSelection={getSelection}\n          setActiveSentenceGroup={setActiveSentenceGroup}\n        />\n\n        <Box\n          style={{\n            maxHeight: \"100%\",\n            maxWidth: \"45vw\",\n            minWidth: \"45vw\",\n            overflow: \"auto\",\n            padding: \"10px\",\n            paddingTop: \"0px\",\n          }}\n        >\n          <Stack direction={\"column\"}>\n            <Stack\n              style={{\n                position: \"sticky\",\n                top: 0,\n                minWidth: \"100%\",\n                backgroundColor: \"#FFFFFF\",\n                zIndex: 1000,\n                boxShadow: \"2px 2px\",\n              }}\n            >\n              <Summary\n                selectedTheme={workspace.selectedTheme}\n                color={workspace.color_code[workspace.selectedTheme]}\n                data={workspace.combinedPatterns}\n                retrain={retrain}\n              />\n            </Stack>\n            <TabelView\n              index={0}\n              setHovering={setHovering}\n              hovering={hovering}\n              handelOpenModal={handleOpenModal}\n              loading={\n                workspace.loadingCombinedPatterns || workspace.loadingPatterns\n              }\n              data={workspace.combinedPatterns.patterns}\n              columns={[\n                { id: \"pattern\", label: \"Pattern\" },\n                { id: \"weight\", label: \"Weight\" },\n                { id: \"fscore\", label: \"Fscore\" },\n                { id: \"recall\", label: \"Recall\" },\n                { id: \"precision\", label: \"Precision\" },\n              ]}\n            />\n\n            <TabelView\n              index={1}\n              handelOpenModal={handleOpenModal}\n              loading={workspace.loadingPatterns}\n              data={Object.values(workspace.patterns)}\n              columns={[\n                { id: \"pattern\", label: \"Pattern\" },\n                { id: \"fscore\", label: \"Fscore\" },\n                { id: \"recall\", label: \"Recall\" },\n                { id: \"precision\", label: \"Precision\" },\n              ]}\n            />\n          </Stack>\n        </Box>\n\n        <CustomPopover\n          open={showContextMenu}\n          anchorPoint={anchorPoint}\n          handleClose={() => {\n            setShowContextMenu(false);\n            setAnchorPoint(null);\n          }}\n          x={x}\n          y={y}\n          handlePhraseLabeling={(label) => {\n            let selected = window.getSelection().toString().replace(/\\n/g, \" \");\n            if (selected.trim() != \"\") {\n              dispatch(\n                labelPhrase({\n                  phrase: selected,\n                  label: label,\n                  id: focusedId,\n                  positive: 1,\n                })\n              ).then(() => {\n                window.getSelection().empty();\n              });\n            }\n            setShowContextMenu(false);\n            setAnchorPoint(null);\n          }}\n        />\n      </Stack>\n\n      <Popover\n        id={\"generaluse_popover\"}\n        anchorEl={popoverAnchor}\n        open={Boolean(popoverAnchor)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        sx={{\n          pointerEvents: \"none\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        disableRestoreFocus\n        children={\n          <>\n            <Box\n              sx={{\n                position: \"relative\",\n                mt: \"10px\",\n                \"&::before\": {\n                  backgroundColor: \"white\",\n                  content: '\"\"',\n                  display: \"block\",\n                  position: \"absolute\",\n                  width: 12,\n                  height: 12,\n                  top: -6,\n                  transform: \"rotate(45deg)\",\n                  left: \"calc(50% - 6px)\",\n                },\n              }}\n            />\n            <Box sx={{ p: 2, backgroundColor: \"white\" }}>{popoverContent}</Box>\n          </>\n        }\n        PaperProps={{\n          style: {\n            backgroundColor: \"transparent\",\n            borderRadius: 1,\n          },\n        }}\n      />\n\n      <ExplainPattern\n        open={openModal}\n        setOpen={setOpenModal}\n        setRow={setPatternRow}\n        row={patternRow}\n      />\n    </Stack>\n  );\n}\n\nexport default {\n  routeProps: {\n    path: \"/\",\n    element: (\n        <Workspace />\n    ),\n  },\n  name: \"workspace\",\n};\n","import Workplace from \"../features/Workspace\";\n\nexport default [Workplace];\n","import logo from '../assets/logo.svg';\nimport '../styles/App.css';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Routes , Route } from 'react-router-dom';\n\nimport modules from '../routes';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { createTheme } from '@material-ui/core';\nimport { CssBaseline } from '@mui/material';\n// import { Provider } from 'react-redux';\n\n\nfunction App() {\n\n  const THEME = createTheme({\n    typography: {\n     \"fontFamily\": `\"Roboto\", \"Nunito\", \"Helvetica\", \"Arial\", sans-serif`,\n     \"fontSize\": 14,\n     \"fontWeightLight\": 300,\n     \"fontWeightRegular\": 400,\n     \"fontWeightMedium\": 500\n    },\n    palette: {\n      mode: darkmode?'dark':'light',\n      background: {\n        default: 'red',\n      },\n    },\n    components: {\n      // Name of the component\n      MuiCard: {\n        styleOverrides: {\n          // Name of the slot\n          root: {\n            // Some CSS\n            border:\"none\"\n          },\n        },\n      },\n    },\n });\n\n const [darkmode, setDarkMode] = useState(true)\n\n  return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={THEME}>\n          <CssBaseline/>\n          <Routes>\n            {modules.map(module => (\n              <Route {...module.routeProps} key={module.name} />\n            ))}\n          </Routes>\n        </MuiThemeProvider>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport WorkspaceReducer from \"../actions/Dataslice\";\n\nexport default configureStore({\n  reducer: {\n    workspace: WorkspaceReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './app/store';\n\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}